{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-08T19:30:17.475Z",
    "end": "2021-07-08T19:31:32.650Z",
    "duration": 75175,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e91e8c0a-f4b5-4188-9d99-025c693456a3",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cdbcfbca-488f-4d67-bea6-59e48c8fe118",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "22092294-9dd1-4bdc-b811-5e9ca46eb4db",
              "parentUUID": "cdbcfbca-488f-4d67-bea6-59e48c8fe118",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22092294-9dd1-4bdc-b811-5e9ca46eb4db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 128,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "86238675-a76c-4557-84b0-69c0b809f43a",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "8b0a338a-abe2-4a7a-943a-bfecbd01b32c",
              "parentUUID": "86238675-a76c-4557-84b0-69c0b809f43a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "dfe68d77-2008-4e0e-b4ed-e050c3723efe",
              "parentUUID": "86238675-a76c-4557-84b0-69c0b809f43a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "5c41b43f-3cde-493f-a205-d4d6dcc443e5",
              "parentUUID": "86238675-a76c-4557-84b0-69c0b809f43a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "f5c49d25-b1b7-445b-8f59-ab83e080bf46",
              "parentUUID": "86238675-a76c-4557-84b0-69c0b809f43a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "4e61b36c-b586-4668-9da0-b2a53d8d0f4a",
              "parentUUID": "86238675-a76c-4557-84b0-69c0b809f43a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a1be4b5e-9e44-434c-9c19-9e6aa9d8513c",
              "parentUUID": "86238675-a76c-4557-84b0-69c0b809f43a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "f069b3c9-21af-48f8-b5ef-ab027e03c29a",
              "parentUUID": "86238675-a76c-4557-84b0-69c0b809f43a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b0a338a-abe2-4a7a-943a-bfecbd01b32c",
            "dfe68d77-2008-4e0e-b4ed-e050c3723efe",
            "5c41b43f-3cde-493f-a205-d4d6dcc443e5",
            "f5c49d25-b1b7-445b-8f59-ab83e080bf46",
            "4e61b36c-b586-4668-9da0-b2a53d8d0f4a",
            "a1be4b5e-9e44-434c-9c19-9e6aa9d8513c",
            "f069b3c9-21af-48f8-b5ef-ab027e03c29a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 666,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e33de44-45e0-46c3-95f9-3c10f688a549",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "342fd4fe-86a9-461c-a32e-955e08f61a81",
              "parentUUID": "1e33de44-45e0-46c3-95f9-3c10f688a549",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "650e0c67-3b40-4bb0-9bad-ad2dfc151fc9",
              "parentUUID": "1e33de44-45e0-46c3-95f9-3c10f688a549",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "342fd4fe-86a9-461c-a32e-955e08f61a81",
            "650e0c67-3b40-4bb0-9bad-ad2dfc151fc9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 197,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32b1a253-3589-48cd-8330-d87020c6b52c",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "d9227c64-9704-4132-9714-8428ed3481f3",
              "parentUUID": "32b1a253-3589-48cd-8330-d87020c6b52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "f7018395-ec1b-4470-a02d-98f653040aa6",
              "parentUUID": "32b1a253-3589-48cd-8330-d87020c6b52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c81dc618-7f12-46a8-b211-51309f6495d1",
              "parentUUID": "32b1a253-3589-48cd-8330-d87020c6b52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "743888bd-8196-4d3d-ab12-64ba536f1235",
              "parentUUID": "32b1a253-3589-48cd-8330-d87020c6b52c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9227c64-9704-4132-9714-8428ed3481f3",
            "f7018395-ec1b-4470-a02d-98f653040aa6",
            "c81dc618-7f12-46a8-b211-51309f6495d1",
            "743888bd-8196-4d3d-ab12-64ba536f1235"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 389,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4fd9720c-f105-4179-baa3-5dfadae1aed1",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "c2468649-b415-46bd-aa83-9bb39f930714",
              "parentUUID": "4fd9720c-f105-4179-baa3-5dfadae1aed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "aeb38696-45cd-4aa8-8d73-02a93e8b1bfe",
              "parentUUID": "4fd9720c-f105-4179-baa3-5dfadae1aed1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2468649-b415-46bd-aa83-9bb39f930714",
            "aeb38696-45cd-4aa8-8d73-02a93e8b1bfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 415,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e3a7854-371e-48ba-b4b1-4faf3f428cbd",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3bb13916-c919-4088-8fc4-861031bb9c3d",
              "parentUUID": "2e3a7854-371e-48ba-b4b1-4faf3f428cbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "baf68e5e-ffad-4fba-8a71-f0b63f16750c",
              "parentUUID": "2e3a7854-371e-48ba-b4b1-4faf3f428cbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3bb13916-c919-4088-8fc4-861031bb9c3d",
            "baf68e5e-ffad-4fba-8a71-f0b63f16750c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 142,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9cef1325-a9e3-4cfa-b5e0-0de81d573f72",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "70cd0fb8-7323-4255-9822-40f8de9623c4",
              "parentUUID": "9cef1325-a9e3-4cfa-b5e0-0de81d573f72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 7698,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "95102824-5e82-4711-a369-696fd15727ad",
              "parentUUID": "9cef1325-a9e3-4cfa-b5e0-0de81d573f72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70cd0fb8-7323-4255-9822-40f8de9623c4",
            "95102824-5e82-4711-a369-696fd15727ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8098,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a5f2d07-a51c-4d0d-af7d-abd7b9d3d530",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 1982,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "c7ea7b99-17ea-4c7b-8493-e274d768d49e",
              "parentUUID": "0a5f2d07-a51c-4d0d-af7d-abd7b9d3d530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 7682,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "0906605f-0338-419c-be6a-31ca09566b33",
              "parentUUID": "0a5f2d07-a51c-4d0d-af7d-abd7b9d3d530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1025,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "8db0841b-4938-4829-8e16-64d5a6736cc5",
              "parentUUID": "0a5f2d07-a51c-4d0d-af7d-abd7b9d3d530",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7ea7b99-17ea-4c7b-8493-e274d768d49e",
            "0906605f-0338-419c-be6a-31ca09566b33",
            "8db0841b-4938-4829-8e16-64d5a6736cc5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10689,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9932f6bc-0f99-4841-a666-887c7f2303fe",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "58225da5-355e-4b1b-a0a7-1fb97f02204e",
              "parentUUID": "9932f6bc-0f99-4841-a666-887c7f2303fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "9b224cf7-7872-4e08-9140-65df4a1384c7",
              "parentUUID": "9932f6bc-0f99-4841-a666-887c7f2303fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "f842c647-cce0-4051-824c-958e6b653850",
              "parentUUID": "9932f6bc-0f99-4841-a666-887c7f2303fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2084,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a92fe9b3-54b3-4eda-8c0c-e5fb2fc2f0c3",
              "parentUUID": "9932f6bc-0f99-4841-a666-887c7f2303fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58225da5-355e-4b1b-a0a7-1fb97f02204e",
            "9b224cf7-7872-4e08-9140-65df4a1384c7",
            "f842c647-cce0-4051-824c-958e6b653850",
            "a92fe9b3-54b3-4eda-8c0c-e5fb2fc2f0c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2290,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f14e55b4-d236-49dc-abc1-3a34290898c6",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4220,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f084a973-a49b-4325-a214-5b3b7cca4ba4",
              "parentUUID": "f14e55b4-d236-49dc-abc1-3a34290898c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4209,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fac9a003-a5e8-4cf6-b1c5-1290c5757da9",
              "parentUUID": "f14e55b4-d236-49dc-abc1-3a34290898c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ed88c960-24af-498c-b2fc-74c62243344b",
              "parentUUID": "f14e55b4-d236-49dc-abc1-3a34290898c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a435a380-f245-444d-9df9-0f730c51a718",
              "parentUUID": "f14e55b4-d236-49dc-abc1-3a34290898c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4206,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2cab2cab-7f5e-4552-8699-3fc5e28d3000",
              "parentUUID": "f14e55b4-d236-49dc-abc1-3a34290898c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4197,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "da58f0f0-e3a2-49b5-826d-d26d8ab76a2c",
              "parentUUID": "f14e55b4-d236-49dc-abc1-3a34290898c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4251,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cbbaf1f3-c580-472e-89c9-ac181d025941",
              "parentUUID": "f14e55b4-d236-49dc-abc1-3a34290898c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4254,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1d5580a6-a846-4368-96f3-a4f68989f073",
              "parentUUID": "f14e55b4-d236-49dc-abc1-3a34290898c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4234,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b4acc026-e228-4aaa-83ab-4fe9468da699",
              "parentUUID": "f14e55b4-d236-49dc-abc1-3a34290898c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f084a973-a49b-4325-a214-5b3b7cca4ba4",
            "fac9a003-a5e8-4cf6-b1c5-1290c5757da9",
            "ed88c960-24af-498c-b2fc-74c62243344b",
            "a435a380-f245-444d-9df9-0f730c51a718",
            "2cab2cab-7f5e-4552-8699-3fc5e28d3000",
            "da58f0f0-e3a2-49b5-826d-d26d8ab76a2c",
            "cbbaf1f3-c580-472e-89c9-ac181d025941",
            "1d5580a6-a846-4368-96f3-a4f68989f073",
            "b4acc026-e228-4aaa-83ab-4fe9468da699"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38019,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eb79a94b-855c-46e4-8bf7-6024e4934f00",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4204,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "93eeab59-4c96-4762-bce0-d9cf8638731c",
              "parentUUID": "eb79a94b-855c-46e4-8bf7-6024e4934f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4209,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d57f7202-e6fe-46b5-9ff5-453f3f58ba38",
              "parentUUID": "eb79a94b-855c-46e4-8bf7-6024e4934f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4209,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39271/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39271/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39271/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39271/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39271/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39271/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3538da46-19f7-4721-8743-4bdc08d5080d",
              "parentUUID": "eb79a94b-855c-46e4-8bf7-6024e4934f00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "93eeab59-4c96-4762-bce0-d9cf8638731c",
            "d57f7202-e6fe-46b5-9ff5-453f3f58ba38",
            "3538da46-19f7-4721-8743-4bdc08d5080d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12622,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9c93451f-720f-4458-be74-5bea817f1bc8",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 432,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39271/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39271/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39271/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39271/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39271/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39271/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39271/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "381fa679-c242-4f6b-bcd2-abe6d6390fe3",
              "parentUUID": "9c93451f-720f-4458-be74-5bea817f1bc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 308,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39271/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39271/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39271/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39271/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39271/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39271/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39271/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39271/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39271/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39271/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39271/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39271/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "8e3a6806-cf89-4d1c-8bf8-9268c475e7a9",
              "parentUUID": "9c93451f-720f-4458-be74-5bea817f1bc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "381fa679-c242-4f6b-bcd2-abe6d6390fe3",
            "8e3a6806-cf89-4d1c-8bf8-9268c475e7a9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 740,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}