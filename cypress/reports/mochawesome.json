{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-09T19:47:47.772Z",
    "end": "2021-07-09T19:49:16.287Z",
    "duration": 88515,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "935b5021-8a4c-4403-897e-1ffc2c06ea69",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ef0e375e-999c-427a-a720-88a8159d204a",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "fb4c892d-ca48-45ba-ba84-1b44d2e7bb28",
              "parentUUID": "ef0e375e-999c-427a-a720-88a8159d204a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb4c892d-ca48-45ba-ba84-1b44d2e7bb28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ee8e59f-313f-4614-8014-f4921ec9bd37",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "d584b527-abb3-4c6b-87d8-08574f199928",
              "parentUUID": "0ee8e59f-313f-4614-8014-f4921ec9bd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "12535e7f-858d-4d69-85dd-691cd6a69900",
              "parentUUID": "0ee8e59f-313f-4614-8014-f4921ec9bd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "699a744f-c644-4be1-90f0-8dc3b5f1aaed",
              "parentUUID": "0ee8e59f-313f-4614-8014-f4921ec9bd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "ec7fc84c-2c7b-4572-a085-6f5b3dc5259e",
              "parentUUID": "0ee8e59f-313f-4614-8014-f4921ec9bd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "b691e320-4179-4668-921f-a3e268809c40",
              "parentUUID": "0ee8e59f-313f-4614-8014-f4921ec9bd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "b97ede72-49aa-446e-86cf-8451b2725629",
              "parentUUID": "0ee8e59f-313f-4614-8014-f4921ec9bd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "9f464857-6602-4cd7-935b-b334f515f90c",
              "parentUUID": "0ee8e59f-313f-4614-8014-f4921ec9bd37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d584b527-abb3-4c6b-87d8-08574f199928",
            "12535e7f-858d-4d69-85dd-691cd6a69900",
            "699a744f-c644-4be1-90f0-8dc3b5f1aaed",
            "ec7fc84c-2c7b-4572-a085-6f5b3dc5259e",
            "b691e320-4179-4668-921f-a3e268809c40",
            "b97ede72-49aa-446e-86cf-8451b2725629",
            "9f464857-6602-4cd7-935b-b334f515f90c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1672,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2d4cc385-5690-437c-b5b4-71d203586346",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "407edcbe-c642-46f3-9890-8142b462a488",
              "parentUUID": "2d4cc385-5690-437c-b5b4-71d203586346",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "a645f4b3-86d6-46b8-848e-f901a92cceae",
              "parentUUID": "2d4cc385-5690-437c-b5b4-71d203586346",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "407edcbe-c642-46f3-9890-8142b462a488",
            "a645f4b3-86d6-46b8-848e-f901a92cceae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 495,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "59be68bd-d06f-44e2-adb8-f7fcccb3cfb5",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "37d788b0-652d-4834-8961-c26f571e116b",
              "parentUUID": "59be68bd-d06f-44e2-adb8-f7fcccb3cfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "defb4c95-7f5d-4516-9d98-88851eff14d9",
              "parentUUID": "59be68bd-d06f-44e2-adb8-f7fcccb3cfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "3d05c388-c410-4289-bdad-2898fd790825",
              "parentUUID": "59be68bd-d06f-44e2-adb8-f7fcccb3cfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "a1209198-13d9-4594-bf3b-d1a69439d9d7",
              "parentUUID": "59be68bd-d06f-44e2-adb8-f7fcccb3cfb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37d788b0-652d-4834-8961-c26f571e116b",
            "defb4c95-7f5d-4516-9d98-88851eff14d9",
            "3d05c388-c410-4289-bdad-2898fd790825",
            "a1209198-13d9-4594-bf3b-d1a69439d9d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 888,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4700832e-6001-4b36-80f1-965cac33d1bc",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "10bec2a4-5bfb-4cc7-8d45-d0f9dc230bf9",
              "parentUUID": "4700832e-6001-4b36-80f1-965cac33d1bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "a03848cf-5918-41da-88c4-4c0d6e05bc9b",
              "parentUUID": "4700832e-6001-4b36-80f1-965cac33d1bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10bec2a4-5bfb-4cc7-8d45-d0f9dc230bf9",
            "a03848cf-5918-41da-88c4-4c0d6e05bc9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1016,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d7066acc-552c-4739-9d3f-5c73aa1624ff",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1aae25db-aef0-4640-98b9-4ce3c03bbe45",
              "parentUUID": "d7066acc-552c-4739-9d3f-5c73aa1624ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "f6539993-f64c-4e57-8f69-3fdc2e329a2f",
              "parentUUID": "d7066acc-552c-4739-9d3f-5c73aa1624ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1aae25db-aef0-4640-98b9-4ce3c03bbe45",
            "f6539993-f64c-4e57-8f69-3fdc2e329a2f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b254de1-9c58-4701-aa75-87673f36bdf7",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "a4ad824c-c4b0-4d86-8b1c-1c716ff01ecd",
              "parentUUID": "5b254de1-9c58-4701-aa75-87673f36bdf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9442,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "cb66f090-b12b-4664-830c-a308dc565285",
              "parentUUID": "5b254de1-9c58-4701-aa75-87673f36bdf7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4ad824c-c4b0-4d86-8b1c-1c716ff01ecd",
            "cb66f090-b12b-4664-830c-a308dc565285"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10048,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4032b055-b3af-4175-90c4-860fca3ace5c",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "35fce149-ee3a-40d7-b81e-f3f8268cd588",
              "parentUUID": "4032b055-b3af-4175-90c4-860fca3ace5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "9b1deed0-1698-4e31-9e7d-b2799377e5e0",
              "parentUUID": "4032b055-b3af-4175-90c4-860fca3ace5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "96ecb2f8-1531-48e5-95f3-ec64008c667a",
              "parentUUID": "4032b055-b3af-4175-90c4-860fca3ace5c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35fce149-ee3a-40d7-b81e-f3f8268cd588",
            "9b1deed0-1698-4e31-9e7d-b2799377e5e0",
            "96ecb2f8-1531-48e5-95f3-ec64008c667a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14537,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "38fd1dbd-9275-4857-a527-b9de89318731",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "f640cde4-ccf9-4e48-9462-2b6c793e38cf",
              "parentUUID": "38fd1dbd-9275-4857-a527-b9de89318731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "90838e65-ac0c-46ce-b52c-88c72ea8b1d3",
              "parentUUID": "38fd1dbd-9275-4857-a527-b9de89318731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d141eb1b-b860-4d9c-ad5d-22b38eb559f1",
              "parentUUID": "38fd1dbd-9275-4857-a527-b9de89318731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2654,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "36bfedeb-ba6b-45b8-ad59-df1d418e5ad8",
              "parentUUID": "38fd1dbd-9275-4857-a527-b9de89318731",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f640cde4-ccf9-4e48-9462-2b6c793e38cf",
            "90838e65-ac0c-46ce-b52c-88c72ea8b1d3",
            "d141eb1b-b860-4d9c-ad5d-22b38eb559f1",
            "36bfedeb-ba6b-45b8-ad59-df1d418e5ad8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4567,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "41a7ddd8-3143-455d-a453-43c134cc95d4",
              "parentUUID": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4451,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a440bb78-ea8c-42ff-a94c-86732caf5f7f",
              "parentUUID": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4425,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ef880b5e-c49f-447d-8d3a-330d3e272050",
              "parentUUID": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4435,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e13068a9-9993-4f4a-a6e2-911a6ac9bd71",
              "parentUUID": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4563,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4eddb6be-7c34-4d3b-9aa4-1b0af014cc2c",
              "parentUUID": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4369,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9682e67c-3cca-4aa1-be32-f2ba584db706",
              "parentUUID": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "148636d4-03e2-42d4-b41e-4a2e34251523",
              "parentUUID": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4409,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a83a7d5f-66f1-4138-8f8e-def8f292beee",
              "parentUUID": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4361,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5c880344-06c7-4acd-a03d-6e3cd4629249",
              "parentUUID": "f558532a-8714-4a1e-a5f0-08e2a7fb182b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "41a7ddd8-3143-455d-a453-43c134cc95d4",
            "a440bb78-ea8c-42ff-a94c-86732caf5f7f",
            "ef880b5e-c49f-447d-8d3a-330d3e272050",
            "e13068a9-9993-4f4a-a6e2-911a6ac9bd71",
            "4eddb6be-7c34-4d3b-9aa4-1b0af014cc2c",
            "9682e67c-3cca-4aa1-be32-f2ba584db706",
            "148636d4-03e2-42d4-b41e-4a2e34251523",
            "a83a7d5f-66f1-4138-8f8e-def8f292beee",
            "5c880344-06c7-4acd-a03d-6e3cd4629249"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39978,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "16c2a33e-5ae0-4b69-bb11-666bfd86e568",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4430,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dc810eb5-4368-499d-9fea-60bc75edc908",
              "parentUUID": "16c2a33e-5ae0-4b69-bb11-666bfd86e568",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4389,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "94205e19-34ef-4629-be28-e47163370e9c",
              "parentUUID": "16c2a33e-5ae0-4b69-bb11-666bfd86e568",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4416,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "47fbff28-ed34-414e-bccc-77bae48403c9",
              "parentUUID": "16c2a33e-5ae0-4b69-bb11-666bfd86e568",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dc810eb5-4368-499d-9fea-60bc75edc908",
            "94205e19-34ef-4629-be28-e47163370e9c",
            "47fbff28-ed34-414e-bccc-77bae48403c9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "284988f7-817d-43c9-8ed2-a4a13af03189",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 498,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34575/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34575/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34575/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34575/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34575/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34575/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34575/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "e34e7920-dee4-4701-82e3-9824f9baa35e",
              "parentUUID": "284988f7-817d-43c9-8ed2-a4a13af03189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 513,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34575/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34575/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34575/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34575/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34575/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34575/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34575/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34575/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "ac11cb11-1ab2-4fb9-b45b-a20f1bc230da",
              "parentUUID": "284988f7-817d-43c9-8ed2-a4a13af03189",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e34e7920-dee4-4701-82e3-9824f9baa35e",
            "ac11cb11-1ab2-4fb9-b45b-a20f1bc230da"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1011,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}