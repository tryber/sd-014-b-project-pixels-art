{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-07-10T21:48:48.812Z",
    "end": "2021-07-10T21:50:11.680Z",
    "duration": 82868,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f6f1125c-c5d1-4528-b4ee-608b728f6578",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a910dbd5-5407-4a58-bf16-702110717a39",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "5975ef5d-c3a3-49f3-8e03-8b4c5996f04b",
              "parentUUID": "a910dbd5-5407-4a58-bf16-702110717a39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5975ef5d-c3a3-49f3-8e03-8b4c5996f04b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 219,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a2b393e7-d54a-4a07-908a-b53cf7c37e11",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "98edd33f-3edc-40ee-8e78-69b7bedc2417",
              "parentUUID": "a2b393e7-d54a-4a07-908a-b53cf7c37e11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "cac7839a-19f7-4426-add9-9a22f1153f54",
              "parentUUID": "a2b393e7-d54a-4a07-908a-b53cf7c37e11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e7fa1b69-6ee0-42d0-a143-3da0d8ca7e20",
              "parentUUID": "a2b393e7-d54a-4a07-908a-b53cf7c37e11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "b821efcb-6c6d-475f-9c41-815af4763e00",
              "parentUUID": "a2b393e7-d54a-4a07-908a-b53cf7c37e11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "06fd2d39-404f-406c-98cb-5ec5ba0dd7d2",
              "parentUUID": "a2b393e7-d54a-4a07-908a-b53cf7c37e11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "c6b78f66-31d7-44af-b492-356b0cbfd075",
              "parentUUID": "a2b393e7-d54a-4a07-908a-b53cf7c37e11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "0850e9dd-983a-4725-8009-25f735b363e2",
              "parentUUID": "a2b393e7-d54a-4a07-908a-b53cf7c37e11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98edd33f-3edc-40ee-8e78-69b7bedc2417",
            "cac7839a-19f7-4426-add9-9a22f1153f54",
            "e7fa1b69-6ee0-42d0-a143-3da0d8ca7e20",
            "b821efcb-6c6d-475f-9c41-815af4763e00",
            "06fd2d39-404f-406c-98cb-5ec5ba0dd7d2",
            "c6b78f66-31d7-44af-b492-356b0cbfd075",
            "0850e9dd-983a-4725-8009-25f735b363e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1194,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "58777bc4-8e55-42ce-8b8a-b717d860c677",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a19b9b44-5dbc-4c8b-9ef4-7e915304bb4a",
              "parentUUID": "58777bc4-8e55-42ce-8b8a-b717d860c677",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "3d7cfbcd-ddc2-498c-9dc8-20b422521c41",
              "parentUUID": "58777bc4-8e55-42ce-8b8a-b717d860c677",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a19b9b44-5dbc-4c8b-9ef4-7e915304bb4a",
            "3d7cfbcd-ddc2-498c-9dc8-20b422521c41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 388,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "235b52a5-cdf5-4520-9c86-3d975978973f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "9552749b-9f03-470f-8140-c8cd41642e1d",
              "parentUUID": "235b52a5-cdf5-4520-9c86-3d975978973f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "31fbadfe-f44b-4fe2-b4ec-3f116577ca6f",
              "parentUUID": "235b52a5-cdf5-4520-9c86-3d975978973f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "8333145e-3979-4b25-9012-ab4d2bc8f4aa",
              "parentUUID": "235b52a5-cdf5-4520-9c86-3d975978973f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "75aa22cc-e411-4d21-ad43-0b936dbcf64e",
              "parentUUID": "235b52a5-cdf5-4520-9c86-3d975978973f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9552749b-9f03-470f-8140-c8cd41642e1d",
            "31fbadfe-f44b-4fe2-b4ec-3f116577ca6f",
            "8333145e-3979-4b25-9012-ab4d2bc8f4aa",
            "75aa22cc-e411-4d21-ad43-0b936dbcf64e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 608,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ba137d55-2de4-4061-a4d5-6f63c3c3b226",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "88ca1339-2d5e-47c2-af46-1460b19f5b7e",
              "parentUUID": "ba137d55-2de4-4061-a4d5-6f63c3c3b226",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "f753352d-2f83-4059-a76c-970039fe0cc6",
              "parentUUID": "ba137d55-2de4-4061-a4d5-6f63c3c3b226",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88ca1339-2d5e-47c2-af46-1460b19f5b7e",
            "f753352d-2f83-4059-a76c-970039fe0cc6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 713,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9431be5-6a74-402a-8f27-a065fdf7fd36",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "453cde55-441b-4307-bb94-37b83c1efae2",
              "parentUUID": "d9431be5-6a74-402a-8f27-a065fdf7fd36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "0ff11762-0fd6-44cd-b5cb-e552e122d022",
              "parentUUID": "d9431be5-6a74-402a-8f27-a065fdf7fd36",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "453cde55-441b-4307-bb94-37b83c1efae2",
            "0ff11762-0fd6-44cd-b5cb-e552e122d022"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 223,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "60de9259-9b25-482b-9c9b-8f2384eb55a2",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "81b833e7-70f7-472c-9daa-ae76cc6ea779",
              "parentUUID": "60de9259-9b25-482b-9c9b-8f2384eb55a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "5df05ec2-e006-41dd-94d7-7617e56944c1",
              "parentUUID": "60de9259-9b25-482b-9c9b-8f2384eb55a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81b833e7-70f7-472c-9daa-ae76cc6ea779",
            "5df05ec2-e006-41dd-94d7-7617e56944c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5bc29658-66bf-47ef-837e-4cf8fe095c29",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "a5e43755-0b47-4f88-b0cd-b3fe046e4bd6",
              "parentUUID": "5bc29658-66bf-47ef-837e-4cf8fe095c29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "560f69a0-96b9-4db7-aabb-ad0681ce0519",
              "parentUUID": "5bc29658-66bf-47ef-837e-4cf8fe095c29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ebd5ca7e-65e9-46ab-b8a5-0ca17d71b2a1",
              "parentUUID": "5bc29658-66bf-47ef-837e-4cf8fe095c29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5e43755-0b47-4f88-b0cd-b3fe046e4bd6",
            "560f69a0-96b9-4db7-aabb-ad0681ce0519",
            "ebd5ca7e-65e9-46ab-b8a5-0ca17d71b2a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12742,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "add9aa5f-b3e1-4259-b677-899c55c21cb1",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "265fcbcc-fde2-4c8b-b868-271d9277f535",
              "parentUUID": "add9aa5f-b3e1-4259-b677-899c55c21cb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "481279a2-6dfd-4a98-8dfc-287779a0c1b9",
              "parentUUID": "add9aa5f-b3e1-4259-b677-899c55c21cb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "0d4b8980-3c5b-470d-ae95-f637ff178d38",
              "parentUUID": "add9aa5f-b3e1-4259-b677-899c55c21cb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "abd21192-ae0f-4ce2-a31a-629152e472a7",
              "parentUUID": "add9aa5f-b3e1-4259-b677-899c55c21cb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "265fcbcc-fde2-4c8b-b868-271d9277f535",
            "481279a2-6dfd-4a98-8dfc-287779a0c1b9",
            "0d4b8980-3c5b-470d-ae95-f637ff178d38",
            "abd21192-ae0f-4ce2-a31a-629152e472a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4330,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5d25b59d-0919-4f22-8cc9-33e58dc26a72",
              "parentUUID": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4394,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "260bdec2-345b-4238-8680-cd08e1420564",
              "parentUUID": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4324,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "62f903e5-23e8-4ff4-adb2-b941a8899b29",
              "parentUUID": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4369,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6008587c-bd8e-4c5e-9ad7-eb30d7afec8b",
              "parentUUID": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4342,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "240de952-fcc9-4d94-a9b8-b54e637071be",
              "parentUUID": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4338,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cd19267c-9fef-47d1-8f39-ae6c6b2c8932",
              "parentUUID": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4365,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "27ef4da0-7e87-4a62-9d86-bbfe64ebd792",
              "parentUUID": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4334,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0a0e9819-e7a4-40e4-a58d-a178cd699372",
              "parentUUID": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4417,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ef05a9d9-21a4-47e6-95c3-d4ec59a4954b",
              "parentUUID": "1b6d992f-5fb6-49d3-a674-232ef3e797f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5d25b59d-0919-4f22-8cc9-33e58dc26a72",
            "260bdec2-345b-4238-8680-cd08e1420564",
            "62f903e5-23e8-4ff4-adb2-b941a8899b29",
            "6008587c-bd8e-4c5e-9ad7-eb30d7afec8b",
            "240de952-fcc9-4d94-a9b8-b54e637071be",
            "cd19267c-9fef-47d1-8f39-ae6c6b2c8932",
            "27ef4da0-7e87-4a62-9d86-bbfe64ebd792",
            "0a0e9819-e7a4-40e4-a58d-a178cd699372",
            "ef05a9d9-21a4-47e6-95c3-d4ec59a4954b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "68889fcd-dfe4-42bf-a3e5-00e01a291b4d",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4384,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "eb4acd02-4e47-4186-923a-3c6e41ee0a37",
              "parentUUID": "68889fcd-dfe4-42bf-a3e5-00e01a291b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4370,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "22fce2ed-0d33-43f1-8bc9-82c2b0a499fa",
              "parentUUID": "68889fcd-dfe4-42bf-a3e5-00e01a291b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4388,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38391/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38391/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38391/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38391/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38391/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38391/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38391/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38391/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38391/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38391/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38391/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "15a31dca-1d86-4cb8-8600-482b04ed6ca7",
              "parentUUID": "68889fcd-dfe4-42bf-a3e5-00e01a291b4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eb4acd02-4e47-4186-923a-3c6e41ee0a37",
            "22fce2ed-0d33-43f1-8bc9-82c2b0a499fa",
            "15a31dca-1d86-4cb8-8600-482b04ed6ca7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13142,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "897ef17a-366d-45a8-b7a5-16074bd6a55f",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "863e44c9-1646-435b-80f3-72de6dd9b63b",
              "parentUUID": "897ef17a-366d-45a8-b7a5-16074bd6a55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "4bc7a189-0d70-4116-b4f7-78ec3575eaab",
              "parentUUID": "897ef17a-366d-45a8-b7a5-16074bd6a55f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "863e44c9-1646-435b-80f3-72de6dd9b63b",
            "4bc7a189-0d70-4116-b4f7-78ec3575eaab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1075,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}