{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-13T04:47:55.125Z",
    "end": "2021-07-13T04:49:10.425Z",
    "duration": 75300,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2ab51a97-6b9d-4dd6-9163-3b0e43fe5287",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87914cb3-c22a-4c22-b524-ff0619a63d91",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "3337c4ff-61e2-40d8-b4ef-f594de5b375a",
              "parentUUID": "87914cb3-c22a-4c22-b524-ff0619a63d91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3337c4ff-61e2-40d8-b4ef-f594de5b375a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 554,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ec2cb50-e022-4db0-9cda-c5a38891e968",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 877,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "527b23bb-f50f-4948-bbcb-f62160804b50",
              "parentUUID": "0ec2cb50-e022-4db0-9cda-c5a38891e968",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b7270e3b-0021-4d2f-bea1-c595499839b3",
              "parentUUID": "0ec2cb50-e022-4db0-9cda-c5a38891e968",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "41664047-f465-4b2b-9ad5-de439722b2a8",
              "parentUUID": "0ec2cb50-e022-4db0-9cda-c5a38891e968",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "0473702e-b890-442c-b0be-8acc4b5326e8",
              "parentUUID": "0ec2cb50-e022-4db0-9cda-c5a38891e968",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "5fd05a47-8bef-4e88-968a-645f728865d1",
              "parentUUID": "0ec2cb50-e022-4db0-9cda-c5a38891e968",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "2639cd13-4300-4943-9d3c-a7b923d139b8",
              "parentUUID": "0ec2cb50-e022-4db0-9cda-c5a38891e968",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2cae92e9-5704-4147-b4e1-2432d3170db2",
              "parentUUID": "0ec2cb50-e022-4db0-9cda-c5a38891e968",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "527b23bb-f50f-4948-bbcb-f62160804b50",
            "b7270e3b-0021-4d2f-bea1-c595499839b3",
            "41664047-f465-4b2b-9ad5-de439722b2a8",
            "0473702e-b890-442c-b0be-8acc4b5326e8",
            "5fd05a47-8bef-4e88-968a-645f728865d1",
            "2639cd13-4300-4943-9d3c-a7b923d139b8",
            "2cae92e9-5704-4147-b4e1-2432d3170db2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ba9da85d-1251-43d1-b2ac-121d2e2270cf",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "889a7c2f-a126-43b5-aff9-33ad1d908f60",
              "parentUUID": "ba9da85d-1251-43d1-b2ac-121d2e2270cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "d44a17a8-7383-4b86-87e9-4927963fab99",
              "parentUUID": "ba9da85d-1251-43d1-b2ac-121d2e2270cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "889a7c2f-a126-43b5-aff9-33ad1d908f60",
            "d44a17a8-7383-4b86-87e9-4927963fab99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 201,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9846e428-ae31-4939-bab9-c4d190bbf14e",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "0bb40fd1-7ad6-45e1-9f67-3ec3eecde692",
              "parentUUID": "9846e428-ae31-4939-bab9-c4d190bbf14e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "d162b6ca-98f3-4dc2-9c82-8094a9818284",
              "parentUUID": "9846e428-ae31-4939-bab9-c4d190bbf14e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f926aa2e-28d5-4873-9eda-003424139cba",
              "parentUUID": "9846e428-ae31-4939-bab9-c4d190bbf14e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "31c47ec4-8221-47d9-808c-e221801cd305",
              "parentUUID": "9846e428-ae31-4939-bab9-c4d190bbf14e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bb40fd1-7ad6-45e1-9f67-3ec3eecde692",
            "d162b6ca-98f3-4dc2-9c82-8094a9818284",
            "f926aa2e-28d5-4873-9eda-003424139cba",
            "31c47ec4-8221-47d9-808c-e221801cd305"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 384,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd6a0ca4-39be-4b3e-a23e-fd411aaf1455",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "de4339f1-1b92-4c37-8d28-79028e70f314",
              "parentUUID": "bd6a0ca4-39be-4b3e-a23e-fd411aaf1455",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "c5a4e9f1-1a30-4da1-ab71-4623aa5071a6",
              "parentUUID": "bd6a0ca4-39be-4b3e-a23e-fd411aaf1455",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de4339f1-1b92-4c37-8d28-79028e70f314",
            "c5a4e9f1-1a30-4da1-ab71-4623aa5071a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 333,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31b88191-a1fe-448c-9d33-9283586ba762",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a0f91704-bddc-4454-b4a2-e6a99a02d4cf",
              "parentUUID": "31b88191-a1fe-448c-9d33-9283586ba762",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "882991bf-762b-48dc-afdd-1730043fdd56",
              "parentUUID": "31b88191-a1fe-448c-9d33-9283586ba762",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0f91704-bddc-4454-b4a2-e6a99a02d4cf",
            "882991bf-762b-48dc-afdd-1730043fdd56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 181,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "18cbbd22-30d0-4e30-9529-933fd5f922e3",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "f1dcc2c3-1832-4dcd-bd58-39eb7f192fe2",
              "parentUUID": "18cbbd22-30d0-4e30-9529-933fd5f922e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 7691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "d611a84f-ccee-4445-9839-1c99bc49dae1",
              "parentUUID": "18cbbd22-30d0-4e30-9529-933fd5f922e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1dcc2c3-1832-4dcd-bd58-39eb7f192fe2",
            "d611a84f-ccee-4445-9839-1c99bc49dae1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8076,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "05273df6-abf9-41c1-9315-9f35e6b33691",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 1950,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "b8821cc2-81fa-44e6-9e2f-416d34dfb42c",
              "parentUUID": "05273df6-abf9-41c1-9315-9f35e6b33691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 7704,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "9caa73a6-8356-481e-9801-df07faef0cb5",
              "parentUUID": "05273df6-abf9-41c1-9315-9f35e6b33691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1071,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "7aedfb14-7ed4-4f1b-b5a3-f54cd5f06cc5",
              "parentUUID": "05273df6-abf9-41c1-9315-9f35e6b33691",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8821cc2-81fa-44e6-9e2f-416d34dfb42c",
            "9caa73a6-8356-481e-9801-df07faef0cb5",
            "7aedfb14-7ed4-4f1b-b5a3-f54cd5f06cc5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10725,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "87ef2047-e571-45fd-a8eb-f54c5553b5bf",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "744c53e1-1506-416f-b440-e2924f31adff",
              "parentUUID": "87ef2047-e571-45fd-a8eb-f54c5553b5bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "571d8e8c-6d88-4d5c-8754-87df8456fbb5",
              "parentUUID": "87ef2047-e571-45fd-a8eb-f54c5553b5bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "65245046-50cd-4524-8edc-963aafece776",
              "parentUUID": "87ef2047-e571-45fd-a8eb-f54c5553b5bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2077,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a3ce7a3c-6642-4731-bc64-a9b4bc8687f4",
              "parentUUID": "87ef2047-e571-45fd-a8eb-f54c5553b5bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "744c53e1-1506-416f-b440-e2924f31adff",
            "571d8e8c-6d88-4d5c-8754-87df8456fbb5",
            "65245046-50cd-4524-8edc-963aafece776",
            "a3ce7a3c-6642-4731-bc64-a9b4bc8687f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2297,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4164,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c963cb84-d6bb-4391-afcd-ead01b86c1ec",
              "parentUUID": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4158,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "68686b3a-4674-48ea-8d43-61767bb958e6",
              "parentUUID": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4186,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "255ab876-87de-40e0-bd5b-51788b8051c8",
              "parentUUID": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4159,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7e0a0b89-0685-428f-9ae8-ff60c197a8d6",
              "parentUUID": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4160,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c81cd486-1494-4e5f-bad5-6a47b11ec207",
              "parentUUID": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4154,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "779366c6-782f-4b0d-822f-b49d874ea572",
              "parentUUID": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4219,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "84a1b697-82e7-4ff0-af91-08563018f037",
              "parentUUID": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4179,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b4af512a-d021-4205-8fef-7f10c29eef1a",
              "parentUUID": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "64fb1b51-c8bc-4867-93cc-838522e2cb0f",
              "parentUUID": "1509acc4-8df4-4914-8f8c-7247e8bd77af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c963cb84-d6bb-4391-afcd-ead01b86c1ec",
            "68686b3a-4674-48ea-8d43-61767bb958e6",
            "255ab876-87de-40e0-bd5b-51788b8051c8",
            "7e0a0b89-0685-428f-9ae8-ff60c197a8d6",
            "c81cd486-1494-4e5f-bad5-6a47b11ec207",
            "779366c6-782f-4b0d-822f-b49d874ea572",
            "84a1b697-82e7-4ff0-af91-08563018f037",
            "b4af512a-d021-4205-8fef-7f10c29eef1a",
            "64fb1b51-c8bc-4867-93cc-838522e2cb0f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37600,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b188a2b-626c-4c7a-9734-1b4eba2e8a5b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4173,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c0f3ee01-0567-4459-9fb6-2a2de9d5f2bc",
              "parentUUID": "6b188a2b-626c-4c7a-9734-1b4eba2e8a5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4174,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ef7df4c8-9445-4a1a-80bd-e9e9b37b4131",
              "parentUUID": "6b188a2b-626c-4c7a-9734-1b4eba2e8a5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4173,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d9feac3d-828f-45bc-b250-28354e62698a",
              "parentUUID": "6b188a2b-626c-4c7a-9734-1b4eba2e8a5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c0f3ee01-0567-4459-9fb6-2a2de9d5f2bc",
            "ef7df4c8-9445-4a1a-80bd-e9e9b37b4131",
            "d9feac3d-828f-45bc-b250-28354e62698a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3edb4b06-726d-46ab-8048-da912bb68db4",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 284,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35057/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35057/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35057/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35057/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35057/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35057/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35057/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "fb9271f1-7682-4f0a-8ed4-672fd10e550d",
              "parentUUID": "3edb4b06-726d-46ab-8048-da912bb68db4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35057/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35057/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35057/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35057/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35057/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35057/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35057/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35057/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "04cb6e3e-97a8-4255-b6f5-1df90bc84ffb",
              "parentUUID": "3edb4b06-726d-46ab-8048-da912bb68db4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fb9271f1-7682-4f0a-8ed4-672fd10e550d",
            "04cb6e3e-97a8-4255-b6f5-1df90bc84ffb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 489,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}