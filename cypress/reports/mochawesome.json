{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-14T04:34:01.921Z",
    "end": "2021-07-14T04:35:23.441Z",
    "duration": 81520,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d776a5ac-5fbb-4c4b-89fe-33efd8b48dc2",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "78f20a27-cb08-4b49-8aeb-83067cd3afb5",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "7a39ee15-b308-454e-8dc2-524bee04077b",
              "parentUUID": "78f20a27-cb08-4b49-8aeb-83067cd3afb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a39ee15-b308-454e-8dc2-524bee04077b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 193,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a2f3f32e-c7d8-41df-8d3a-4314bdf6b126",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "e1c5cffd-a457-47ca-a5e1-a35718b43a66",
              "parentUUID": "a2f3f32e-c7d8-41df-8d3a-4314bdf6b126",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f19da925-707b-4d56-8501-4223538e112a",
              "parentUUID": "a2f3f32e-c7d8-41df-8d3a-4314bdf6b126",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "520b8bac-2bb6-4505-8451-e4a57c4b3343",
              "parentUUID": "a2f3f32e-c7d8-41df-8d3a-4314bdf6b126",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "d62d9731-8be5-4329-af22-6ccb2319962c",
              "parentUUID": "a2f3f32e-c7d8-41df-8d3a-4314bdf6b126",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "638b18b0-600f-4d74-b0c4-d33e6239f833",
              "parentUUID": "a2f3f32e-c7d8-41df-8d3a-4314bdf6b126",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "206da069-c2f3-413d-bbca-08d1e1f10b2c",
              "parentUUID": "a2f3f32e-c7d8-41df-8d3a-4314bdf6b126",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "e30310c2-9ec3-4b70-9075-5052450116d1",
              "parentUUID": "a2f3f32e-c7d8-41df-8d3a-4314bdf6b126",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1c5cffd-a457-47ca-a5e1-a35718b43a66",
            "f19da925-707b-4d56-8501-4223538e112a",
            "520b8bac-2bb6-4505-8451-e4a57c4b3343",
            "d62d9731-8be5-4329-af22-6ccb2319962c",
            "638b18b0-600f-4d74-b0c4-d33e6239f833",
            "206da069-c2f3-413d-bbca-08d1e1f10b2c",
            "e30310c2-9ec3-4b70-9075-5052450116d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 664,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3052b82e-bf33-4cd0-92c9-edd37589959b",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5f993b68-4938-446b-9808-9682e49363c3",
              "parentUUID": "3052b82e-bf33-4cd0-92c9-edd37589959b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "85f54489-c2cf-41ca-aafe-abfb690c27ba",
              "parentUUID": "3052b82e-bf33-4cd0-92c9-edd37589959b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f993b68-4938-446b-9808-9682e49363c3",
            "85f54489-c2cf-41ca-aafe-abfb690c27ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 259,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "40c9c9ef-0c52-4a9f-b89d-665257368d44",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "06e95de7-16d8-4556-bc54-2d4d1160af70",
              "parentUUID": "40c9c9ef-0c52-4a9f-b89d-665257368d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "052bb727-27a5-471b-9d7f-fd96d5677861",
              "parentUUID": "40c9c9ef-0c52-4a9f-b89d-665257368d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "65330f48-35a9-4b17-b397-287e70cea057",
              "parentUUID": "40c9c9ef-0c52-4a9f-b89d-665257368d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "273fad25-90dc-450f-b991-aee14329e4e8",
              "parentUUID": "40c9c9ef-0c52-4a9f-b89d-665257368d44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06e95de7-16d8-4556-bc54-2d4d1160af70",
            "052bb727-27a5-471b-9d7f-fd96d5677861",
            "65330f48-35a9-4b17-b397-287e70cea057",
            "273fad25-90dc-450f-b991-aee14329e4e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 402,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7803b51b-a9e6-4a4f-afd2-a1ada71597ae",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "dce1fae6-6d29-4cda-8a56-f0bfe9fa3f6e",
              "parentUUID": "7803b51b-a9e6-4a4f-afd2-a1ada71597ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "660b2b49-f1f2-40fc-8a5d-7b4363ae7b81",
              "parentUUID": "7803b51b-a9e6-4a4f-afd2-a1ada71597ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dce1fae6-6d29-4cda-8a56-f0bfe9fa3f6e",
            "660b2b49-f1f2-40fc-8a5d-7b4363ae7b81"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 479,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b0610ccc-6892-45cc-9cab-2c72fb2fd3fb",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b5900a08-e199-4487-860d-fe8f347a7685",
              "parentUUID": "b0610ccc-6892-45cc-9cab-2c72fb2fd3fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "174de36a-ec5c-4fd1-9520-c70f61c8d0f8",
              "parentUUID": "b0610ccc-6892-45cc-9cab-2c72fb2fd3fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5900a08-e199-4487-860d-fe8f347a7685",
            "174de36a-ec5c-4fd1-9520-c70f61c8d0f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9184ac3e-2d87-4825-b05b-f18658838e5f",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "4093cbdd-6980-4a91-85df-775f979f3d4e",
              "parentUUID": "9184ac3e-2d87-4825-b05b-f18658838e5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "ad65a4d3-3f70-4c89-bd7e-152363596f8d",
              "parentUUID": "9184ac3e-2d87-4825-b05b-f18658838e5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4093cbdd-6980-4a91-85df-775f979f3d4e",
            "ad65a4d3-3f70-4c89-bd7e-152363596f8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "47d61363-9806-47f4-9e5c-9228f9ddb84c",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "5f0f576c-a376-4700-b1da-646f4804208c",
              "parentUUID": "47d61363-9806-47f4-9e5c-9228f9ddb84c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "702662e0-5760-4ddd-8220-10d26d3e5b26",
              "parentUUID": "47d61363-9806-47f4-9e5c-9228f9ddb84c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "9836c070-8144-476c-bddb-566401af9784",
              "parentUUID": "47d61363-9806-47f4-9e5c-9228f9ddb84c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f0f576c-a376-4700-b1da-646f4804208c",
            "702662e0-5760-4ddd-8220-10d26d3e5b26",
            "9836c070-8144-476c-bddb-566401af9784"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12309,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c26a4502-5341-4f8b-9dd2-3b978b6dad0b",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "82b492d8-51fc-411c-b076-e557988c03c6",
              "parentUUID": "c26a4502-5341-4f8b-9dd2-3b978b6dad0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "4936e23b-e8f3-4582-98bc-6b5258aafcfd",
              "parentUUID": "c26a4502-5341-4f8b-9dd2-3b978b6dad0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "ce759b21-0dee-4ff4-8717-2bf0ee497e1e",
              "parentUUID": "c26a4502-5341-4f8b-9dd2-3b978b6dad0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "ee7b8210-b5f7-45cd-b7d3-f12d2dff9a64",
              "parentUUID": "c26a4502-5341-4f8b-9dd2-3b978b6dad0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82b492d8-51fc-411c-b076-e557988c03c6",
            "4936e23b-e8f3-4582-98bc-6b5258aafcfd",
            "ce759b21-0dee-4ff4-8717-2bf0ee497e1e",
            "ee7b8210-b5f7-45cd-b7d3-f12d2dff9a64"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9b06b50b-0e1b-4b02-ad64-11343486a047",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "10466e0a-8560-402e-a0e7-997cf33ccbf6",
              "parentUUID": "9b06b50b-0e1b-4b02-ad64-11343486a047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4469,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8347dde4-b601-412b-89fa-7ad31cb60bf1",
              "parentUUID": "9b06b50b-0e1b-4b02-ad64-11343486a047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4470,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dd0e9151-758e-46c8-a4a3-41ff6187e059",
              "parentUUID": "9b06b50b-0e1b-4b02-ad64-11343486a047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4460,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "80b2aed2-603d-4a08-bce1-8389904eceb6",
              "parentUUID": "9b06b50b-0e1b-4b02-ad64-11343486a047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4463,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "14990f50-d5e4-4fed-8142-180dfdd1f450",
              "parentUUID": "9b06b50b-0e1b-4b02-ad64-11343486a047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0925f1b9-d9cc-4add-bde5-8a0e5e210709",
              "parentUUID": "9b06b50b-0e1b-4b02-ad64-11343486a047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4479,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "672a291e-f71c-40e3-afe9-23a770ed74a4",
              "parentUUID": "9b06b50b-0e1b-4b02-ad64-11343486a047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4487,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "30abc178-82f5-4a81-9447-8d0edaed3850",
              "parentUUID": "9b06b50b-0e1b-4b02-ad64-11343486a047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4454,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0373ed2e-c70b-470a-8af1-6efd88203a95",
              "parentUUID": "9b06b50b-0e1b-4b02-ad64-11343486a047",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "10466e0a-8560-402e-a0e7-997cf33ccbf6",
            "8347dde4-b601-412b-89fa-7ad31cb60bf1",
            "dd0e9151-758e-46c8-a4a3-41ff6187e059",
            "80b2aed2-603d-4a08-bce1-8389904eceb6",
            "14990f50-d5e4-4fed-8142-180dfdd1f450",
            "0925f1b9-d9cc-4add-bde5-8a0e5e210709",
            "672a291e-f71c-40e3-afe9-23a770ed74a4",
            "30abc178-82f5-4a81-9447-8d0edaed3850",
            "0373ed2e-c70b-470a-8af1-6efd88203a95"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1000680b-2d9c-40a7-a37a-715ae3e1bb98",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4470,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "802d08a9-0826-4c5f-8f0f-5537328cee5f",
              "parentUUID": "1000680b-2d9c-40a7-a37a-715ae3e1bb98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4458,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "14160781-892e-4157-b575-08b3bcb10af0",
              "parentUUID": "1000680b-2d9c-40a7-a37a-715ae3e1bb98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51968/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51968/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51968/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51968/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51968/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51968/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "56c3523c-f97c-4de2-8d36-78ea7563c8dd",
              "parentUUID": "1000680b-2d9c-40a7-a37a-715ae3e1bb98",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "802d08a9-0826-4c5f-8f0f-5537328cee5f",
            "14160781-892e-4157-b575-08b3bcb10af0",
            "56c3523c-f97c-4de2-8d36-78ea7563c8dd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13400,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "917ac676-8211-4e1e-ab09-9361df6e99d5",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 503,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:51968/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:51968/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:51968/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:51968/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:51968/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:51968/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:51968/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "e423e902-5b08-4864-873f-b1179cfc952d",
              "parentUUID": "917ac676-8211-4e1e-ab09-9361df6e99d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 480,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:51968/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:51968/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:51968/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:51968/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:51968/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:51968/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:51968/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51968/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51968/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:51968/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51968/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51968/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "4157de3d-b3b3-4160-a6b9-4cf206e4a2e2",
              "parentUUID": "917ac676-8211-4e1e-ab09-9361df6e99d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e423e902-5b08-4864-873f-b1179cfc952d",
            "4157de3d-b3b3-4160-a6b9-4cf206e4a2e2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 983,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}