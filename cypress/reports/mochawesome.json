{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-10T21:37:02.254Z",
    "end": "2021-07-10T21:38:25.726Z",
    "duration": 83472,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "266b82eb-491a-42be-94df-5617a8a0b7be",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91f36ec8-4aec-4448-9580-7e67d70f25c4",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f82029f6-311d-4413-b87f-3cb6b8715d2f",
              "parentUUID": "91f36ec8-4aec-4448-9580-7e67d70f25c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f82029f6-311d-4413-b87f-3cb6b8715d2f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 556,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f9e3e7ea-b313-4276-94a5-9713294d6fe0",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "7c47a139-e13c-420c-8b37-e8a9cb1ae61e",
              "parentUUID": "f9e3e7ea-b313-4276-94a5-9713294d6fe0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f390b8de-6e23-4076-9d6d-35c79d75216e",
              "parentUUID": "f9e3e7ea-b313-4276-94a5-9713294d6fe0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "91e3fd74-bdd9-4e45-a3c2-67aff4baa9b3",
              "parentUUID": "f9e3e7ea-b313-4276-94a5-9713294d6fe0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "b2cb1f0a-75ba-4201-88de-f90dd2a50536",
              "parentUUID": "f9e3e7ea-b313-4276-94a5-9713294d6fe0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "1bf402e2-5854-45d8-bcaf-e978ad7644df",
              "parentUUID": "f9e3e7ea-b313-4276-94a5-9713294d6fe0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "2e1e86a0-3582-4fe1-a986-681601c4f8d1",
              "parentUUID": "f9e3e7ea-b313-4276-94a5-9713294d6fe0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "58b54d7f-0cb3-4f87-82a4-0f72818cfdba",
              "parentUUID": "f9e3e7ea-b313-4276-94a5-9713294d6fe0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c47a139-e13c-420c-8b37-e8a9cb1ae61e",
            "f390b8de-6e23-4076-9d6d-35c79d75216e",
            "91e3fd74-bdd9-4e45-a3c2-67aff4baa9b3",
            "b2cb1f0a-75ba-4201-88de-f90dd2a50536",
            "1bf402e2-5854-45d8-bcaf-e978ad7644df",
            "2e1e86a0-3582-4fe1-a986-681601c4f8d1",
            "58b54d7f-0cb3-4f87-82a4-0f72818cfdba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1371,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c68680a-24dd-492b-b36f-ce161bac5f77",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d32beb1e-1fcb-4903-88e9-97303872751f",
              "parentUUID": "3c68680a-24dd-492b-b36f-ce161bac5f77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "8990549e-4e63-4914-a548-78a1077cb918",
              "parentUUID": "3c68680a-24dd-492b-b36f-ce161bac5f77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d32beb1e-1fcb-4903-88e9-97303872751f",
            "8990549e-4e63-4914-a548-78a1077cb918"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0112a143-f357-4964-a632-a7bd755d8985",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "04f821ce-2286-4eeb-8d9a-9c7e51d68f01",
              "parentUUID": "0112a143-f357-4964-a632-a7bd755d8985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "2d9399e4-8071-408f-8778-c2e93c9a33e9",
              "parentUUID": "0112a143-f357-4964-a632-a7bd755d8985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 441,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "AssertionError: expected '<th.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgba(0, 0, 0, 0)'",
                "estack": "AssertionError: expected '<th.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgba(0, 0, 0, 0)'\n    at callback (http://localhost:40375/__cypress/runner/cypress_runner.js:136947:20)\n    at getRet (http://localhost:40375/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40375/__cypress/runner/cypress_runner.js:164690:29)\n    at thenFn (http://localhost:40375/__cypress/runner/cypress_runner.js:136599:23)\n    at yieldItem (http://localhost:40375/__cypress/runner/cypress_runner.js:136954:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:40375/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:40375/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40375/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": "- 'rgba(0, 0, 0, 0)'\n+ 'rgb(255, 255, 255)'\n"
              },
              "uuid": "3d3ae902-b6bf-4a53-8ff1-ad9d570c5d93",
              "parentUUID": "0112a143-f357-4964-a632-a7bd755d8985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "e65b3927-8fb5-4fef-a559-4566ffaa7f2b",
              "parentUUID": "0112a143-f357-4964-a632-a7bd755d8985",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04f821ce-2286-4eeb-8d9a-9c7e51d68f01",
            "2d9399e4-8071-408f-8778-c2e93c9a33e9",
            "e65b3927-8fb5-4fef-a559-4566ffaa7f2b"
          ],
          "failures": [
            "3d3ae902-b6bf-4a53-8ff1-ad9d570c5d93"
          ],
          "pending": [],
          "skipped": [],
          "duration": 887,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f28384cf-8db5-482e-b8d2-43b2b74030a7",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 371,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "AssertionError: expected '<th.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgba(0, 0, 0, 0)'",
                "estack": "AssertionError: expected '<th.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgba(0, 0, 0, 0)'\n    at callback (http://localhost:40375/__cypress/runner/cypress_runner.js:136947:20)\n    at getRet (http://localhost:40375/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40375/__cypress/runner/cypress_runner.js:164690:29)\n    at thenFn (http://localhost:40375/__cypress/runner/cypress_runner.js:136599:23)\n    at yieldItem (http://localhost:40375/__cypress/runner/cypress_runner.js:136954:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:40375/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:40375/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40375/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": "- 'rgba(0, 0, 0, 0)'\n+ 'rgb(255, 255, 255)'\n"
              },
              "uuid": "42b47247-4a03-48d0-96d9-283724ce1da3",
              "parentUUID": "f28384cf-8db5-482e-b8d2-43b2b74030a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "7ae43064-a00c-48e4-89e4-b69f66a44fa8",
              "parentUUID": "f28384cf-8db5-482e-b8d2-43b2b74030a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ae43064-a00c-48e4-89e4-b69f66a44fa8"
          ],
          "failures": [
            "42b47247-4a03-48d0-96d9-283724ce1da3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 810,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a725d70-e917-4f9f-8032-69f0b3356745",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "163ceee3-7727-4b84-b76c-1199a6ca6f90",
              "parentUUID": "4a725d70-e917-4f9f-8032-69f0b3356745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b35ddbdf-451b-4e52-917c-13428fdf7261",
              "parentUUID": "4a725d70-e917-4f9f-8032-69f0b3356745",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "163ceee3-7727-4b84-b76c-1199a6ca6f90",
            "b35ddbdf-451b-4e52-917c-13428fdf7261"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 225,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aff95010-7692-4128-87e0-00b1949d0840",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "54ff4f71-ca2b-42aa-9cec-dd2f78316f49",
              "parentUUID": "aff95010-7692-4128-87e0-00b1949d0840",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8981,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "af62fa73-8839-445d-ad2a-f84251a1044b",
              "parentUUID": "aff95010-7692-4128-87e0-00b1949d0840",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54ff4f71-ca2b-42aa-9cec-dd2f78316f49",
            "af62fa73-8839-445d-ad2a-f84251a1044b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9511,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a18bde2-5450-4c3e-bcc1-94f59d7e598c",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "bbb027d9-3cfa-4711-b521-57dbf5e4774a",
              "parentUUID": "5a18bde2-5450-4c3e-bcc1-94f59d7e598c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8862,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "191e37cf-ac60-4e77-8457-324eda603100",
              "parentUUID": "5a18bde2-5450-4c3e-bcc1-94f59d7e598c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1778,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "dbec50d3-661f-4670-b099-539d7ca3ace6",
              "parentUUID": "5a18bde2-5450-4c3e-bcc1-94f59d7e598c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbb027d9-3cfa-4711-b521-57dbf5e4774a",
            "191e37cf-ac60-4e77-8457-324eda603100",
            "dbec50d3-661f-4670-b099-539d7ca3ace6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12912,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3a48dc5d-c59c-48c0-806f-03cd43ef4093",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "d6d336fe-cac3-4f6d-bb65-a6f4996c9a80",
              "parentUUID": "3a48dc5d-c59c-48c0-806f-03cd43ef4093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "736012f5-3207-4e1d-b8db-60e9cf8b2b6b",
              "parentUUID": "3a48dc5d-c59c-48c0-806f-03cd43ef4093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "8835974a-922e-4797-9ffa-f27e74b09833",
              "parentUUID": "3a48dc5d-c59c-48c0-806f-03cd43ef4093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "1736608a-b8c5-45bd-aae8-f3f002b31c42",
              "parentUUID": "3a48dc5d-c59c-48c0-806f-03cd43ef4093",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6d336fe-cac3-4f6d-bb65-a6f4996c9a80",
            "736012f5-3207-4e1d-b8db-60e9cf8b2b6b",
            "8835974a-922e-4797-9ffa-f27e74b09833",
            "1736608a-b8c5-45bd-aae8-f3f002b31c42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2847,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4380,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8bc06100-6f78-41f0-9ca0-482267e1c66a",
              "parentUUID": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4333,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0e317894-7d30-4ef5-95dd-3f8575595485",
              "parentUUID": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4296,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f63ac348-140e-44bc-ac38-95a9d293883c",
              "parentUUID": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4315,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0e5e84cb-96e5-4445-8283-ef0c8157c26e",
              "parentUUID": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4337,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b8bc0b7f-c131-463a-8cb0-2d2ec5eafc1c",
              "parentUUID": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4314,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fecd772b-52c3-40ed-9590-179c0ed8f73d",
              "parentUUID": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5a8acf21-9cf4-43f8-8a0f-75aebe814782",
              "parentUUID": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4348,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5c37d884-4251-4387-ac8a-504656387910",
              "parentUUID": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4297,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6b7e8f59-35bf-4058-97aa-94d55d687abc",
              "parentUUID": "41162ec5-32a5-4fb4-9c6c-0e0138f4f99b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8bc06100-6f78-41f0-9ca0-482267e1c66a",
            "0e317894-7d30-4ef5-95dd-3f8575595485",
            "f63ac348-140e-44bc-ac38-95a9d293883c",
            "0e5e84cb-96e5-4445-8283-ef0c8157c26e",
            "b8bc0b7f-c131-463a-8cb0-2d2ec5eafc1c",
            "fecd772b-52c3-40ed-9590-179c0ed8f73d",
            "5a8acf21-9cf4-43f8-8a0f-75aebe814782",
            "5c37d884-4251-4387-ac8a-504656387910",
            "6b7e8f59-35bf-4058-97aa-94d55d687abc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38912,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a90023a8-318a-48df-818a-763bfd56e550",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "505a7ab3-79b5-4286-b23f-bd4a7a768e76",
              "parentUUID": "a90023a8-318a-48df-818a-763bfd56e550",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e1ea3e91-a911-4f15-8fd9-19500058d1e4",
              "parentUUID": "a90023a8-318a-48df-818a-763bfd56e550",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4301,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40375/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40375/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40375/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40375/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40375/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40375/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40375/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40375/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40375/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40375/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40375/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fbc43386-da00-4860-90ee-110ae5b85303",
              "parentUUID": "a90023a8-318a-48df-818a-763bfd56e550",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "505a7ab3-79b5-4286-b23f-bd4a7a768e76",
            "e1ea3e91-a911-4f15-8fd9-19500058d1e4",
            "fbc43386-da00-4860-90ee-110ae5b85303"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12930,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b34982a-dcb6-4d41-bef3-576e1a24c305",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "9c56f598-ee64-4ffc-8ed6-dc2fefe4702e",
              "parentUUID": "5b34982a-dcb6-4d41-bef3-576e1a24c305",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 540,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "02e395e1-84da-41c3-9edb-22181a38dd13",
              "parentUUID": "5b34982a-dcb6-4d41-bef3-576e1a24c305",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c56f598-ee64-4ffc-8ed6-dc2fefe4702e",
            "02e395e1-84da-41c3-9edb-22181a38dd13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1035,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}