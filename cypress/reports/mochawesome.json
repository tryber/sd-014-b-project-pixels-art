{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 19,
    "pending": 0,
    "failures": 22,
    "start": "2021-07-08T23:35:19.595Z",
    "end": "2021-07-08T23:37:15.242Z",
    "duration": 115647,
    "testsRegistered": 41,
    "passPercent": 46.34146341463415,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "35b937be-6116-4e58-baf9-0196d453fa18",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ea5a501b-029d-4dfd-a683-1d33ae5d92fc",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 839,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "5defc7c0-3770-40a3-9adf-a595884e2c17",
              "parentUUID": "ea5a501b-029d-4dfd-a683-1d33ae5d92fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5defc7c0-3770-40a3-9adf-a595884e2c17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 839,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "18beb6ef-266e-452e-b5a5-d008d8973da8",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 613,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "7a36262e-874e-43bc-a776-417237ffa9cc",
              "parentUUID": "18beb6ef-266e-452e-b5a5-d008d8973da8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "10612f07-4a7e-4520-a0bd-1703b2e1b206",
              "parentUUID": "18beb6ef-266e-452e-b5a5-d008d8973da8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "238d10fe-89a5-4db2-8f4d-a0c840ad17e0",
              "parentUUID": "18beb6ef-266e-452e-b5a5-d008d8973da8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "a8987e72-9141-410a-bc2a-468b4d93bf28",
              "parentUUID": "18beb6ef-266e-452e-b5a5-d008d8973da8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "85868a57-b105-46cb-97e6-0ee75a2e5870",
              "parentUUID": "18beb6ef-266e-452e-b5a5-d008d8973da8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "ccb4e150-7e31-4210-9a8e-b82b9df140eb",
              "parentUUID": "18beb6ef-266e-452e-b5a5-d008d8973da8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7e115ee0-5500-4345-bfc1-56e54fd838e1",
              "parentUUID": "18beb6ef-266e-452e-b5a5-d008d8973da8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a36262e-874e-43bc-a776-417237ffa9cc",
            "10612f07-4a7e-4520-a0bd-1703b2e1b206",
            "238d10fe-89a5-4db2-8f4d-a0c840ad17e0",
            "a8987e72-9141-410a-bc2a-468b4d93bf28",
            "85868a57-b105-46cb-97e6-0ee75a2e5870",
            "ccb4e150-7e31-4210-9a8e-b82b9df140eb",
            "7e115ee0-5500-4345-bfc1-56e54fd838e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e92918b0-596d-4be6-aefd-fc8d5a782abf",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9f373e06-201d-4073-a31b-ebde3398a0cf",
              "parentUUID": "e92918b0-596d-4be6-aefd-fc8d5a782abf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "1efda216-606b-4cbb-93ab-65ed48ff43d7",
              "parentUUID": "e92918b0-596d-4be6-aefd-fc8d5a782abf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f373e06-201d-4073-a31b-ebde3398a0cf",
            "1efda216-606b-4cbb-93ab-65ed48ff43d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 461,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97875c28-c670-4b0a-83e1-74ef706b2a13",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "74bef431-2aeb-4895-a51a-66d2b4a21c09",
              "parentUUID": "97875c28-c670-4b0a-83e1-74ef706b2a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "975dd25d-2685-46ae-9818-1a15bc66f113",
              "parentUUID": "97875c28-c670-4b0a-83e1-74ef706b2a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 432,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "320696d1-bad7-4a88-ab36-0e958864b1ff",
              "parentUUID": "97875c28-c670-4b0a-83e1-74ef706b2a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "a9d6ce40-deec-45f7-8a13-455cb93a3a56",
              "parentUUID": "97875c28-c670-4b0a-83e1-74ef706b2a13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74bef431-2aeb-4895-a51a-66d2b4a21c09",
            "975dd25d-2685-46ae-9818-1a15bc66f113",
            "320696d1-bad7-4a88-ab36-0e958864b1ff",
            "a9d6ce40-deec-45f7-8a13-455cb93a3a56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1087,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "15f18c05-7de9-4742-9ff9-39fa1887e702",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "6a0421ec-e796-4511-8a30-66c1d9bc3197",
              "parentUUID": "15f18c05-7de9-4742-9ff9-39fa1887e702",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "7a0b2b60-412b-4e14-af3c-bcf2f2ad90b7",
              "parentUUID": "15f18c05-7de9-4742-9ff9-39fa1887e702",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a0421ec-e796-4511-8a30-66c1d9bc3197",
            "7a0b2b60-412b-4e14-af3c-bcf2f2ad90b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3bf1fb5-9d8d-458a-aef5-eeb4f45ebfc8",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 4713,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels -- Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected` (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels -- Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected` (failed).png'\n\n",
                "diff": null
              },
              "uuid": "600136c2-87e4-4653-b91a-9dbe09f21022",
              "parentUUID": "d3bf1fb5-9d8d-458a-aef5-eeb4f45ebfc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "acf75c5e-39fe-489f-a41d-20be4f822acc",
              "parentUUID": "d3bf1fb5-9d8d-458a-aef5-eeb4f45ebfc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "acf75c5e-39fe-489f-a41d-20be4f822acc"
          ],
          "failures": [
            "600136c2-87e4-4653-b91a-9dbe09f21022"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5139,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "80401cd3-c38b-43f3-9542-05e050d5b676",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 793,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro -- Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro -- Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez (failed).png'\n\n",
                "diff": null
              },
              "uuid": "87f156ba-49b7-4801-80e7-e05c627ccda4",
              "parentUUID": "80401cd3-c38b-43f3-9542-05e050d5b676",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "9942214a-2ca4-437d-87c6-7e01cae6159c",
              "parentUUID": "80401cd3-c38b-43f3-9542-05e050d5b676",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9942214a-2ca4-437d-87c6-7e01cae6159c"
          ],
          "failures": [
            "87f156ba-49b7-4801-80e7-e05c627ccda4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10218,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27355186-a551-44da-af7f-2838c0a81f43",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 4747,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se ao carregar a página deve ser possível pintar os pixels de preto (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se ao carregar a página deve ser possível pintar os pixels de preto (failed).png'\n\n",
                "diff": null
              },
              "uuid": "9c17691c-9ffc-4553-a26e-49496c9caaea",
              "parentUUID": "27355186-a551-44da-af7f-2838c0a81f43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 4792,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com (failed).png'\n\n",
                "diff": null
              },
              "uuid": "34edd2be-ceac-43a5-b3c9-ecfa180e9a25",
              "parentUUID": "27355186-a551-44da-af7f-2838c0a81f43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "04a1f047-e8b5-4a87-bff7-39318288abc5",
              "parentUUID": "27355186-a551-44da-af7f-2838c0a81f43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04a1f047-e8b5-4a87-bff7-39318288abc5"
          ],
          "failures": [
            "9c17691c-9ffc-4553-a26e-49496c9caaea",
            "34edd2be-ceac-43a5-b3c9-ecfa180e9a25"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "afb2fd79-79cf-48a0-9702-17378b880c64",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 4731,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o botão tem o `id` denominado `clear-board` (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o botão tem o `id` denominado `clear-board` (failed).png'\n\n",
                "diff": null
              },
              "uuid": "281902b1-66ad-4327-b37f-a45c25f03703",
              "parentUUID": "afb2fd79-79cf-48a0-9702-17378b880c64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4634,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels (failed).png'\n\n",
                "diff": null
              },
              "uuid": "b4cf5681-6bf5-4931-8026-22432979adaf",
              "parentUUID": "afb2fd79-79cf-48a0-9702-17378b880c64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 4676,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o texto do botão é 'Limpar' (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o texto do botão é 'Limpar' (failed).png'\n\n",
                "diff": null
              },
              "uuid": "c5c05f79-a7de-4c09-ab16-420162386c8c",
              "parentUUID": "afb2fd79-79cf-48a0-9702-17378b880c64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 4742,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco (failed).png'\n\n",
                "diff": null
              },
              "uuid": "0bdbbe22-5ebf-4819-94ec-259f70d09658",
              "parentUUID": "afb2fd79-79cf-48a0-9702-17378b880c64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "281902b1-66ad-4327-b37f-a45c25f03703",
            "b4cf5681-6bf5-4931-8026-22432979adaf",
            "c5c05f79-a7de-4c09-ab16-420162386c8c",
            "0bdbbe22-5ebf-4819-94ec-259f70d09658"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18783,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10373b19-4c4f-438f-8633-ab41f65b7225",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4752,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46157/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46157/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46157/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46157/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46157/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46157/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46157/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46157/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46157/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7c2420c8-863b-4250-9787-a436a3a5bb9b",
              "parentUUID": "10373b19-4c4f-438f-8633-ab41f65b7225",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4694,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46157/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46157/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46157/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46157/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46157/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46157/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46157/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46157/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46157/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7cdcc798-0904-41cb-ad65-699f88210abb",
              "parentUUID": "10373b19-4c4f-438f-8633-ab41f65b7225",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4901,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input` (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input` (failed).png'\n\n",
                "diff": null
              },
              "uuid": "9ce3537b-87a0-4fe0-9296-35327206df55",
              "parentUUID": "10373b19-4c4f-438f-8633-ab41f65b7225",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5082,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46157/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46157/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46157/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46157/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46157/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46157/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46157/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46157/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46157/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "259402ba-e04d-4ca9-abf1-bbf1ea611d92",
              "parentUUID": "10373b19-4c4f-438f-8633-ab41f65b7225",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4915,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels (failed).png'\n\n",
                "diff": null
              },
              "uuid": "85402fa1-d73a-43aa-ba0c-aa0d638f0806",
              "parentUUID": "10373b19-4c4f-438f-8633-ab41f65b7225",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4584,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46157/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46157/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46157/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46157/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46157/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46157/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46157/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46157/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46157/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e1c4e160-16fc-4b17-93fb-fb063692cc79",
              "parentUUID": "10373b19-4c4f-438f-8633-ab41f65b7225",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4933,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto 'Board inválido!' (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto 'Board inválido!' (failed).png'\n\n",
                "diff": null
              },
              "uuid": "fdb3d6e4-07fa-4604-a8ff-50cb45470827",
              "parentUUID": "10373b19-4c4f-438f-8633-ab41f65b7225",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4568,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda (failed).png'\n\n",
                "diff": null
              },
              "uuid": "d35141a7-8426-4e26-be2a-fc5d4cade514",
              "parentUUID": "10373b19-4c4f-438f-8633-ab41f65b7225",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4687,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca (failed).png'\n\n",
                "diff": null
              },
              "uuid": "f6748ab8-a7e8-4692-a9eb-454139baeaed",
              "parentUUID": "10373b19-4c4f-438f-8633-ab41f65b7225",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7c2420c8-863b-4250-9787-a436a3a5bb9b",
            "7cdcc798-0904-41cb-ad65-699f88210abb",
            "9ce3537b-87a0-4fe0-9296-35327206df55",
            "259402ba-e04d-4ca9-abf1-bbf1ea611d92",
            "85402fa1-d73a-43aa-ba0c-aa0d638f0806",
            "e1c4e160-16fc-4b17-93fb-fb063692cc79",
            "fdb3d6e4-07fa-4604-a8ff-50cb45470827",
            "d35141a7-8426-4e26-be2a-fc5d4cade514",
            "f6748ab8-a7e8-4692-a9eb-454139baeaed"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43116,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a766da88-e745-480b-8bb3-f23953d6ae6f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4772,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46157/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46157/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46157/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46157/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46157/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46157/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46157/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46157/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46157/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "37c60f30-b634-4c90-980f-af98f8000b5b",
              "parentUUID": "a766da88-e745-480b-8bb3-f23953d6ae6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4760,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46157/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46157/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46157/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46157/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46157/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46157/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46157/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46157/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46157/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f9a36589-124f-4329-b800-7064f11843e5",
              "parentUUID": "a766da88-e745-480b-8bb3-f23953d6ae6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5020,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46157/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46157/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46157/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46157/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46157/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46157/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46157/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46157/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46157/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46157/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46157/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "03e5fc79-e9da-4acb-b121-4f436f6d1c4a",
              "parentUUID": "a766da88-e745-480b-8bb3-f23953d6ae6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "37c60f30-b634-4c90-980f-af98f8000b5b",
            "f9a36589-124f-4329-b800-7064f11843e5",
            "03e5fc79-e9da-4acb-b121-4f436f6d1c4a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14552,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "908f23cd-6202-4f34-af9c-6e35ea9bcb8a",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1255,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página -- Verifica se as cores geradas na paleta são diferentes a cada carregamento da página (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página -- Verifica se as cores geradas na paleta são diferentes a cada carregamento da página (failed).png'\n\n",
                "diff": null
              },
              "uuid": "aba203e1-f4e2-4a40-bb74-fe819814f1bb",
              "parentUUID": "908f23cd-6202-4f34-af9c-6e35ea9bcb8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 971,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página -- Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página -- Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores (failed).png'\n\n",
                "diff": null
              },
              "uuid": "8cbbd3db-005b-4130-9fcf-eea222aab5d4",
              "parentUUID": "908f23cd-6202-4f34-af9c-6e35ea9bcb8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "aba203e1-f4e2-4a40-bb74-fe819814f1bb",
            "8cbbd3db-005b-4130-9fcf-eea222aab5d4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}