{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-16T18:44:41.185Z",
    "end": "2021-07-16T18:46:09.164Z",
    "duration": 87979,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8a0bd0e3-9c90-4726-83b6-0a17644fc4df",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cf1936e0-ac44-4691-9058-3c64ce0cb982",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "851cac71-e607-4c23-a7e1-a5a49e76dca5",
              "parentUUID": "cf1936e0-ac44-4691-9058-3c64ce0cb982",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "851cac71-e607-4c23-a7e1-a5a49e76dca5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 584,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97042537-0a4f-4c0d-8cd2-23b091564882",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "b60e4aa4-3494-4d48-9ff7-a14fd9e4f23d",
              "parentUUID": "97042537-0a4f-4c0d-8cd2-23b091564882",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "76a0fa42-9ebb-4e12-a4a0-226f16a9b828",
              "parentUUID": "97042537-0a4f-4c0d-8cd2-23b091564882",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "1a2660f1-bf70-4a12-af71-8a1a83be2619",
              "parentUUID": "97042537-0a4f-4c0d-8cd2-23b091564882",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "7ef21b7f-0f83-4c09-b24f-518181e1f9c2",
              "parentUUID": "97042537-0a4f-4c0d-8cd2-23b091564882",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "9c2685e2-e66d-4de9-8ba1-13f6dbd1fe89",
              "parentUUID": "97042537-0a4f-4c0d-8cd2-23b091564882",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "037907ad-48e9-4f29-b506-41c257834ed1",
              "parentUUID": "97042537-0a4f-4c0d-8cd2-23b091564882",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2d5c17dd-836d-4e5b-bae4-02ed5eeff303",
              "parentUUID": "97042537-0a4f-4c0d-8cd2-23b091564882",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b60e4aa4-3494-4d48-9ff7-a14fd9e4f23d",
            "76a0fa42-9ebb-4e12-a4a0-226f16a9b828",
            "1a2660f1-bf70-4a12-af71-8a1a83be2619",
            "7ef21b7f-0f83-4c09-b24f-518181e1f9c2",
            "9c2685e2-e66d-4de9-8ba1-13f6dbd1fe89",
            "037907ad-48e9-4f29-b506-41c257834ed1",
            "2d5c17dd-836d-4e5b-bae4-02ed5eeff303"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1755,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cd73923e-7d4d-45cc-9bd2-070066ddee1c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5cee5c7c-fbe7-45c3-8d4c-f9ea28657159",
              "parentUUID": "cd73923e-7d4d-45cc-9bd2-070066ddee1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "63b093f6-9d15-45f6-8a23-aeea4dde9b8e",
              "parentUUID": "cd73923e-7d4d-45cc-9bd2-070066ddee1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cee5c7c-fbe7-45c3-8d4c-f9ea28657159",
            "63b093f6-9d15-45f6-8a23-aeea4dde9b8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 521,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ac8ab191-d7ab-4738-99a9-14e67a0e578e",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "03ed01fb-8a76-4d3f-b441-d89b80533bd1",
              "parentUUID": "ac8ab191-d7ab-4738-99a9-14e67a0e578e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a3c21973-c960-4949-ae02-6c74d22ae8dd",
              "parentUUID": "ac8ab191-d7ab-4738-99a9-14e67a0e578e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "34879107-879e-47c9-a365-c24d952bf7a7",
              "parentUUID": "ac8ab191-d7ab-4738-99a9-14e67a0e578e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "490c7f97-3d44-4e63-898e-2b2754a6c8a0",
              "parentUUID": "ac8ab191-d7ab-4738-99a9-14e67a0e578e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03ed01fb-8a76-4d3f-b441-d89b80533bd1",
            "a3c21973-c960-4949-ae02-6c74d22ae8dd",
            "34879107-879e-47c9-a365-c24d952bf7a7",
            "490c7f97-3d44-4e63-898e-2b2754a6c8a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 778,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "63252ee6-fac8-4dad-9b6e-abea7d9e5f6b",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 442,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "16efaeeb-468a-4404-8c74-a9e7a4cad379",
              "parentUUID": "63252ee6-fac8-4dad-9b6e-abea7d9e5f6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "c2502040-09a5-40c0-9601-26113fb9544f",
              "parentUUID": "63252ee6-fac8-4dad-9b6e-abea7d9e5f6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16efaeeb-468a-4404-8c74-a9e7a4cad379",
            "c2502040-09a5-40c0-9601-26113fb9544f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 917,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1f385d39-400f-417b-a4fe-eefdea735f89",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f04f0728-f9cf-4c3f-bed3-971e3732f8af",
              "parentUUID": "1f385d39-400f-417b-a4fe-eefdea735f89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "7eae0a87-f769-4303-8f67-ed3accdc5414",
              "parentUUID": "1f385d39-400f-417b-a4fe-eefdea735f89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f04f0728-f9cf-4c3f-bed3-971e3732f8af",
            "7eae0a87-f769-4303-8f67-ed3accdc5414"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 308,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "73aedcd5-b3ac-4c93-b40b-dde978cfa67d",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "be887de9-2c87-4da1-8fb9-356c793a506f",
              "parentUUID": "73aedcd5-b3ac-4c93-b40b-dde978cfa67d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "c0a62466-9bf4-4ec4-9f79-e977648ac10c",
              "parentUUID": "73aedcd5-b3ac-4c93-b40b-dde978cfa67d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be887de9-2c87-4da1-8fb9-356c793a506f",
            "c0a62466-9bf4-4ec4-9f79-e977648ac10c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10068,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0223a319-5273-439d-a2a6-260c064f94b3",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "930c98ca-f87a-4001-acb9-5f2fdf22ad18",
              "parentUUID": "0223a319-5273-439d-a2a6-260c064f94b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "282c4eb4-797a-418e-9491-d80e22e5b52f",
              "parentUUID": "0223a319-5273-439d-a2a6-260c064f94b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1839,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ad1cc757-61cb-4dab-87b1-8ccae2820e93",
              "parentUUID": "0223a319-5273-439d-a2a6-260c064f94b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "930c98ca-f87a-4001-acb9-5f2fdf22ad18",
            "282c4eb4-797a-418e-9491-d80e22e5b52f",
            "ad1cc757-61cb-4dab-87b1-8ccae2820e93"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13540,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "43b043d2-3b0f-478e-ac47-f442c96fc518",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "82c3ad42-e04c-425d-b15b-f5b6c451688c",
              "parentUUID": "43b043d2-3b0f-478e-ac47-f442c96fc518",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "8febb655-7bf0-43cd-b1f8-f204930bfe25",
              "parentUUID": "43b043d2-3b0f-478e-ac47-f442c96fc518",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "01488fe2-6de6-4644-ac99-3d2beb0fbcd7",
              "parentUUID": "43b043d2-3b0f-478e-ac47-f442c96fc518",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2703,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "17db58a5-141d-4d97-9f39-e8ccd987b365",
              "parentUUID": "43b043d2-3b0f-478e-ac47-f442c96fc518",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82c3ad42-e04c-425d-b15b-f5b6c451688c",
            "8febb655-7bf0-43cd-b1f8-f204930bfe25",
            "01488fe2-6de6-4644-ac99-3d2beb0fbcd7",
            "17db58a5-141d-4d97-9f39-e8ccd987b365"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1922cd72-897e-49df-a4fb-a93b1f849410",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4478,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec687e21-c66c-402d-a8fb-df952aeaed1e",
              "parentUUID": "1922cd72-897e-49df-a4fb-a93b1f849410",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4480,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6fd76f66-3622-40c3-a221-d0710cc60a33",
              "parentUUID": "1922cd72-897e-49df-a4fb-a93b1f849410",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4388,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "33d8bdd3-9200-4a21-ac2c-29f8187c40d1",
              "parentUUID": "1922cd72-897e-49df-a4fb-a93b1f849410",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4462,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c36e9adf-c756-4fae-9498-77ec215c1d72",
              "parentUUID": "1922cd72-897e-49df-a4fb-a93b1f849410",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4474,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fabf344b-cade-427f-9e2b-a9bc7d7e96ee",
              "parentUUID": "1922cd72-897e-49df-a4fb-a93b1f849410",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e7309b42-b3ef-4663-8c1e-6dab1db04d9e",
              "parentUUID": "1922cd72-897e-49df-a4fb-a93b1f849410",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4485,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "edac7914-b5af-45eb-93a0-7799c00071ed",
              "parentUUID": "1922cd72-897e-49df-a4fb-a93b1f849410",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4408,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cb444842-e522-4494-8d2e-8aaf7bf0aa75",
              "parentUUID": "1922cd72-897e-49df-a4fb-a93b1f849410",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4487,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c86d24eb-6221-4356-b1e5-8a6a674fe205",
              "parentUUID": "1922cd72-897e-49df-a4fb-a93b1f849410",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ec687e21-c66c-402d-a8fb-df952aeaed1e",
            "6fd76f66-3622-40c3-a221-d0710cc60a33",
            "33d8bdd3-9200-4a21-ac2c-29f8187c40d1",
            "c36e9adf-c756-4fae-9498-77ec215c1d72",
            "fabf344b-cade-427f-9e2b-a9bc7d7e96ee",
            "e7309b42-b3ef-4663-8c1e-6dab1db04d9e",
            "edac7914-b5af-45eb-93a0-7799c00071ed",
            "cb444842-e522-4494-8d2e-8aaf7bf0aa75",
            "c86d24eb-6221-4356-b1e5-8a6a674fe205"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7a8457c6-5aaf-4bac-88a7-1942b759192b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4633,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e184605b-d49b-48a1-aac1-ae59be71ab02",
              "parentUUID": "7a8457c6-5aaf-4bac-88a7-1942b759192b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4517,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c1f1fd5e-6bdf-4256-827b-1360630d6b6a",
              "parentUUID": "7a8457c6-5aaf-4bac-88a7-1942b759192b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4463,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46643/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46643/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46643/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46643/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46643/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46643/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7a81bb12-db5e-451c-a3a2-7bfd6ceb72bb",
              "parentUUID": "7a8457c6-5aaf-4bac-88a7-1942b759192b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e184605b-d49b-48a1-aac1-ae59be71ab02",
            "c1f1fd5e-6bdf-4256-827b-1360630d6b6a",
            "7a81bb12-db5e-451c-a3a2-7bfd6ceb72bb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13613,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c6f2e027-74d5-49cc-9272-20f02e05027b",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 527,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46643/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46643/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46643/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46643/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46643/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46643/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46643/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "174a64da-2b8f-4342-b3ee-79855fd802f1",
              "parentUUID": "c6f2e027-74d5-49cc-9272-20f02e05027b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 584,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46643/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46643/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46643/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46643/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46643/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46643/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46643/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46643/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46643/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46643/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46643/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46643/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7fe32b30-6298-4a60-9ce3-a47dbbb1ce03",
              "parentUUID": "c6f2e027-74d5-49cc-9272-20f02e05027b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "174a64da-2b8f-4342-b3ee-79855fd802f1",
            "7fe32b30-6298-4a60-9ce3-a47dbbb1ce03"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1111,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}