{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-11T06:43:34.696Z",
    "end": "2021-07-11T06:45:52.846Z",
    "duration": 138150,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3563ecf9-f0cd-4f7d-b550-0c17f7fce90e",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b22bea7a-f2ff-4daf-86b6-bbf486d0bfc4",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "b892b0fe-2966-4958-a933-7e15ad490ba8",
              "parentUUID": "b22bea7a-f2ff-4daf-86b6-bbf486d0bfc4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b892b0fe-2966-4958-a933-7e15ad490ba8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d4da1dac-7998-4831-8c5c-583286452194",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 837,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "630df57a-2c7f-414e-beac-2e415d23f222",
              "parentUUID": "d4da1dac-7998-4831-8c5c-583286452194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 1208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "0d639156-7b4f-4a50-9b82-83350bc8d7cc",
              "parentUUID": "d4da1dac-7998-4831-8c5c-583286452194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "09551804-a6b7-4fd8-a322-49b8c3526630",
              "parentUUID": "d4da1dac-7998-4831-8c5c-583286452194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "d290e7d8-5275-4efb-bdef-026e1cc4bdcb",
              "parentUUID": "d4da1dac-7998-4831-8c5c-583286452194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 720,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "88ee1fb5-f990-4336-b887-533af6817589",
              "parentUUID": "d4da1dac-7998-4831-8c5c-583286452194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "241b3ef1-c3fa-4a4e-887c-229112ea0b08",
              "parentUUID": "d4da1dac-7998-4831-8c5c-583286452194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 528,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "1da1988c-6130-42e5-af97-f0117dfde148",
              "parentUUID": "d4da1dac-7998-4831-8c5c-583286452194",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "630df57a-2c7f-414e-beac-2e415d23f222",
            "0d639156-7b4f-4a50-9b82-83350bc8d7cc",
            "09551804-a6b7-4fd8-a322-49b8c3526630",
            "d290e7d8-5275-4efb-bdef-026e1cc4bdcb",
            "88ee1fb5-f990-4336-b887-533af6817589",
            "241b3ef1-c3fa-4a4e-887c-229112ea0b08",
            "1da1988c-6130-42e5-af97-f0117dfde148"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5340,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75b6ec22-880b-4b28-9065-8454d4640131",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "19b9b5a0-34ee-45d7-a9a4-0cd52b8a05d2",
              "parentUUID": "75b6ec22-880b-4b28-9065-8454d4640131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 1060,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "4fcd065f-80ce-40cf-810d-bd4e0488fa40",
              "parentUUID": "75b6ec22-880b-4b28-9065-8454d4640131",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19b9b5a0-34ee-45d7-a9a4-0cd52b8a05d2",
            "4fcd065f-80ce-40cf-810d-bd4e0488fa40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1614,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "52b71940-3085-4341-9664-7d0a78ef02ff",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "03d76ab0-0736-459b-8da7-52f1e04236e9",
              "parentUUID": "52b71940-3085-4341-9664-7d0a78ef02ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 807,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "97c00af3-d5a0-4d0e-8abb-55dce224522e",
              "parentUUID": "52b71940-3085-4341-9664-7d0a78ef02ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 1083,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "361e4112-25e8-4827-835a-f6df68f5dd59",
              "parentUUID": "52b71940-3085-4341-9664-7d0a78ef02ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1d30185e-c090-4982-9b9c-71d96505bd63",
              "parentUUID": "52b71940-3085-4341-9664-7d0a78ef02ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03d76ab0-0736-459b-8da7-52f1e04236e9",
            "97c00af3-d5a0-4d0e-8abb-55dce224522e",
            "361e4112-25e8-4827-835a-f6df68f5dd59",
            "1d30185e-c090-4982-9b9c-71d96505bd63"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2925,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8964de7-db81-4f8f-80b3-a831de80ab96",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "1b798740-e5f7-4bf0-a93e-fbb2e8c4c2eb",
              "parentUUID": "e8964de7-db81-4f8f-80b3-a831de80ab96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1659,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "c8892095-9a4c-4447-87b1-99ac587d8da7",
              "parentUUID": "e8964de7-db81-4f8f-80b3-a831de80ab96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b798740-e5f7-4bf0-a93e-fbb2e8c4c2eb",
            "c8892095-9a4c-4447-87b1-99ac587d8da7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3209,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d76ac31a-6ab1-4f65-ab12-41bdf801e57a",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 637,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "72361acf-deee-4414-9d51-47473f2f471f",
              "parentUUID": "d76ac31a-6ab1-4f65-ab12-41bdf801e57a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "de73cdcc-f4b1-41e4-8434-5afd20d9c898",
              "parentUUID": "d76ac31a-6ab1-4f65-ab12-41bdf801e57a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72361acf-deee-4414-9d51-47473f2f471f",
            "de73cdcc-f4b1-41e4-8434-5afd20d9c898"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1317,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "40a55fd3-e0b4-4c9a-95ea-f33e22a37a31",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "9056d572-8a35-4eea-a98a-00712b900312",
              "parentUUID": "40a55fd3-e0b4-4c9a-95ea-f33e22a37a31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 13300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "07886f79-ba23-44c6-a204-5f4cfd221b5e",
              "parentUUID": "40a55fd3-e0b4-4c9a-95ea-f33e22a37a31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9056d572-8a35-4eea-a98a-00712b900312",
            "07886f79-ba23-44c6-a204-5f4cfd221b5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14618,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c05ff86f-658e-4fc7-a9a5-3ca49182413d",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 3848,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "dd78ccb4-3f56-4c01-a579-2636821748b3",
              "parentUUID": "c05ff86f-658e-4fc7-a9a5-3ca49182413d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 13036,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "170e8426-2400-4e35-85ab-1b1951164226",
              "parentUUID": "c05ff86f-658e-4fc7-a9a5-3ca49182413d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 5742,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "74c2da02-4e5b-4ba8-85ce-092accfe46a3",
              "parentUUID": "c05ff86f-658e-4fc7-a9a5-3ca49182413d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd78ccb4-3f56-4c01-a579-2636821748b3",
            "170e8426-2400-4e35-85ab-1b1951164226",
            "74c2da02-4e5b-4ba8-85ce-092accfe46a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22626,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7394e013-0d95-4d82-8cb6-6c5b9c848a93",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 751,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "07a7c37f-00f8-4772-9a44-4b5c94c2f0e0",
              "parentUUID": "7394e013-0d95-4d82-8cb6-6c5b9c848a93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "abcee99e-64f1-42d3-8a99-1a2bd75f5655",
              "parentUUID": "7394e013-0d95-4d82-8cb6-6c5b9c848a93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 616,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "f0f37e06-4902-4133-afe1-32ac4e212cc1",
              "parentUUID": "7394e013-0d95-4d82-8cb6-6c5b9c848a93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3989,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "f407c78a-1ae2-4a19-b2c3-cb8ce3741c11",
              "parentUUID": "7394e013-0d95-4d82-8cb6-6c5b9c848a93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07a7c37f-00f8-4772-9a44-4b5c94c2f0e0",
            "abcee99e-64f1-42d3-8a99-1a2bd75f5655",
            "f0f37e06-4902-4133-afe1-32ac4e212cc1",
            "f407c78a-1ae2-4a19-b2c3-cb8ce3741c11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5804,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e6ba98e8-7766-4117-b068-d24f3542db09",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5818,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f4494267-7f89-4f17-9e71-857e85be7fa6",
              "parentUUID": "e6ba98e8-7766-4117-b068-d24f3542db09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5719,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e718c418-a854-44b6-bcc6-e7ebf19dd1ce",
              "parentUUID": "e6ba98e8-7766-4117-b068-d24f3542db09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5767,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7b5d8967-5e35-4ad0-917e-a1e041f7c8b6",
              "parentUUID": "e6ba98e8-7766-4117-b068-d24f3542db09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5735,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f4cf1aa4-40ec-4b64-a14a-361f8fdcea1d",
              "parentUUID": "e6ba98e8-7766-4117-b068-d24f3542db09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5587,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2bd19924-15e2-48d9-b1b3-4476c345be9b",
              "parentUUID": "e6ba98e8-7766-4117-b068-d24f3542db09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 6101,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d36a9955-0aec-4a52-9423-4bf1ddaaa294",
              "parentUUID": "e6ba98e8-7766-4117-b068-d24f3542db09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 5730,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7de9bacb-4032-42f5-b195-3ca4e2de17cc",
              "parentUUID": "e6ba98e8-7766-4117-b068-d24f3542db09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5994,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6904758c-ca6a-4f23-ac02-ee3a2ca9e95f",
              "parentUUID": "e6ba98e8-7766-4117-b068-d24f3542db09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5923,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7cadbdf4-d7cc-4bfc-9289-6d353b67c88e",
              "parentUUID": "e6ba98e8-7766-4117-b068-d24f3542db09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f4494267-7f89-4f17-9e71-857e85be7fa6",
            "e718c418-a854-44b6-bcc6-e7ebf19dd1ce",
            "7b5d8967-5e35-4ad0-917e-a1e041f7c8b6",
            "f4cf1aa4-40ec-4b64-a14a-361f8fdcea1d",
            "2bd19924-15e2-48d9-b1b3-4476c345be9b",
            "d36a9955-0aec-4a52-9423-4bf1ddaaa294",
            "7de9bacb-4032-42f5-b195-3ca4e2de17cc",
            "6904758c-ca6a-4f23-ac02-ee3a2ca9e95f",
            "7cadbdf4-d7cc-4bfc-9289-6d353b67c88e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 52374,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ace9d121-702a-412c-94a2-f4e1fb9207dd",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5577,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8c7100fe-bea6-4d79-a465-8425fa1408a1",
              "parentUUID": "ace9d121-702a-412c-94a2-f4e1fb9207dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5521,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "85bd97ae-62a3-4180-bb4b-f0d7f1e5ea8a",
              "parentUUID": "ace9d121-702a-412c-94a2-f4e1fb9207dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5805,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44815/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44815/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44815/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44815/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44815/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44815/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6a62714d-b265-4b08-ba06-b21499ef92ac",
              "parentUUID": "ace9d121-702a-412c-94a2-f4e1fb9207dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8c7100fe-bea6-4d79-a465-8425fa1408a1",
            "85bd97ae-62a3-4180-bb4b-f0d7f1e5ea8a",
            "6a62714d-b265-4b08-ba06-b21499ef92ac"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f35934be-72b7-4c72-90b0-b59990e8cc14",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 2491,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44815/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44815/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44815/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44815/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44815/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44815/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44815/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "e051b380-18df-41ac-a78d-cbb60c06914c",
              "parentUUID": "f35934be-72b7-4c72-90b0-b59990e8cc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 2341,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44815/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44815/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44815/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44815/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44815/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44815/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44815/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44815/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44815/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44815/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44815/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44815/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f0b746f0-ce0a-4123-bebb-736f6e368483",
              "parentUUID": "f35934be-72b7-4c72-90b0-b59990e8cc14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e051b380-18df-41ac-a78d-cbb60c06914c",
            "f0b746f0-ce0a-4123-bebb-736f6e368483"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4832,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}