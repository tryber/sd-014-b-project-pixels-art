{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 11,
    "pending": 0,
    "failures": 30,
    "start": "2021-07-08T20:54:32.037Z",
    "end": "2021-07-08T20:56:49.812Z",
    "duration": 137775,
    "testsRegistered": 41,
    "passPercent": 26.82926829268293,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fb7efd6e-f461-404e-bccd-4090ad6f69e7",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "362f9061-11d0-4b61-9057-25c6df13aae3",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "68938e11-c646-4621-a77d-c5031135d3b2",
              "parentUUID": "362f9061-11d0-4b61-9057-25c6df13aae3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "68938e11-c646-4621-a77d-c5031135d3b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6bac6cdf-c528-4ab6-9d93-6ea18c2fb570",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "f4fca1af-0443-4606-9314-98fc814f78f6",
              "parentUUID": "6bac6cdf-c528-4ab6-9d93-6ea18c2fb570",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "a4fe3419-a709-436a-91d9-1c3d2dfe2af4",
              "parentUUID": "6bac6cdf-c528-4ab6-9d93-6ea18c2fb570",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "135d3164-6dcb-4d1c-ad39-93d428ee0258",
              "parentUUID": "6bac6cdf-c528-4ab6-9d93-6ea18c2fb570",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "ba2d61ee-4e8a-4ce8-8aec-a3b904a89db3",
              "parentUUID": "6bac6cdf-c528-4ab6-9d93-6ea18c2fb570",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "55906c0f-e129-4bc3-b692-9a7608f644dc",
              "parentUUID": "6bac6cdf-c528-4ab6-9d93-6ea18c2fb570",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "8fc22a62-61d8-4bdc-b8cf-c1c7a1a37479",
              "parentUUID": "6bac6cdf-c528-4ab6-9d93-6ea18c2fb570",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "bb910d9f-1599-46b5-bdfd-0684abd6d7b8",
              "parentUUID": "6bac6cdf-c528-4ab6-9d93-6ea18c2fb570",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4fca1af-0443-4606-9314-98fc814f78f6",
            "a4fe3419-a709-436a-91d9-1c3d2dfe2af4",
            "135d3164-6dcb-4d1c-ad39-93d428ee0258",
            "ba2d61ee-4e8a-4ce8-8aec-a3b904a89db3",
            "55906c0f-e129-4bc3-b692-9a7608f644dc",
            "8fc22a62-61d8-4bdc-b8cf-c1c7a1a37479",
            "bb910d9f-1599-46b5-bdfd-0684abd6d7b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2160,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4227abc7-a7b0-4743-a652-e5430f21e33a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3841484c-5162-48de-a980-26d0ab3c1994",
              "parentUUID": "4227abc7-a7b0-4743-a652-e5430f21e33a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "30c15b65-740b-420b-a623-6aa426f28fbe",
              "parentUUID": "4227abc7-a7b0-4743-a652-e5430f21e33a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3841484c-5162-48de-a980-26d0ab3c1994",
            "30c15b65-740b-420b-a623-6aa426f28fbe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 526,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cfc1ffd8-c065-4d5c-bb1f-cac6c70b079e",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 4761,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/4 - Adicione à página um quadro de pixels, com 25 pixels -- Verifica se o quadro de pixels possui o `id` denominado `pixel-board` (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/4 - Adicione à página um quadro de pixels, com 25 pixels -- Verifica se o quadro de pixels possui o `id` denominado `pixel-board` (failed).png'\n\n",
                "diff": null
              },
              "uuid": "282f1fa8-9580-4464-becb-d09e06eb0abb",
              "parentUUID": "cfc1ffd8-c065-4d5c-bb1f-cac6c70b079e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 4804,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/4 - Adicione à página um quadro de pixels, com 25 pixels -- Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel` (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/4 - Adicione à página um quadro de pixels, com 25 pixels -- Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel` (failed).png'\n\n",
                "diff": null
              },
              "uuid": "0ef81234-53d7-423b-b5b2-192fca02d6ce",
              "parentUUID": "cfc1ffd8-c065-4d5c-bb1f-cac6c70b079e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 4620,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/4 - Adicione à página um quadro de pixels, com 25 pixels -- Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/4 - Adicione à página um quadro de pixels, com 25 pixels -- Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca (failed).png'\n\n",
                "diff": null
              },
              "uuid": "fa92264b-0d74-4c6a-b381-8232c3ca9255",
              "parentUUID": "cfc1ffd8-c065-4d5c-bb1f-cac6c70b079e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 4691,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#pixel-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#pixel-board', but never found it.\n    at cypressErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33669/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33669/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33669/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33669/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33669/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33669/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33669/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33669/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33669/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "13a37e1f-83d0-4412-adbc-f5cf37718dd4",
              "parentUUID": "cfc1ffd8-c065-4d5c-bb1f-cac6c70b079e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "282f1fa8-9580-4464-becb-d09e06eb0abb",
            "0ef81234-53d7-423b-b5b2-192fca02d6ce",
            "fa92264b-0d74-4c6a-b381-8232c3ca9255",
            "13a37e1f-83d0-4412-adbc-f5cf37718dd4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18876,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "737ced86-9aa4-4809-b52c-b9b69d4eb410",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 4827,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel -- Verifica se o quadro de pixels tem altura e comprimento de 5 element (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel -- Verifica se o quadro de pixels tem altura e comprimento de 5 element (failed).png'\n\n",
                "diff": null
              },
              "uuid": "5b349700-b559-40db-93a3-e315b035b626",
              "parentUUID": "737ced86-9aa4-4809-b52c-b9b69d4eb410",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 4654,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel -- Verifica se 40 pixels é o tamanho total do elemento, incluindo seu c (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel -- Verifica se 40 pixels é o tamanho total do elemento, incluindo seu c (failed).png'\n\n",
                "diff": null
              },
              "uuid": "fc9fdaf2-99fd-4e2b-89a9-47db859e861f",
              "parentUUID": "737ced86-9aa4-4809-b52c-b9b69d4eb410",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5b349700-b559-40db-93a3-e315b035b626",
            "fc9fdaf2-99fd-4e2b-89a9-47db859e861f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9481,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3cb2d469-aa5e-43b1-b0b7-08e3fccfe167",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 4822,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels -- Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected` (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels -- Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected` (failed).png'\n\n",
                "diff": null
              },
              "uuid": "f52618f6-2e94-444d-bd35-aed24ac4208e",
              "parentUUID": "3cb2d469-aa5e-43b1-b0b7-08e3fccfe167",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 555,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "f31d83b4-9293-493a-a248-dc30f300e7cd",
              "parentUUID": "3cb2d469-aa5e-43b1-b0b7-08e3fccfe167",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f31d83b4-9293-493a-a248-dc30f300e7cd"
          ],
          "failures": [
            "f52618f6-2e94-444d-bd35-aed24ac4208e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5377,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe7843c1-8a69-4b48-b01a-fce3a95d31ed",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 583,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro -- Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro -- Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez (failed).png'\n\n",
                "diff": null
              },
              "uuid": "519f398a-6b5c-4c46-96aa-e6b531a0d723",
              "parentUUID": "fe7843c1-8a69-4b48-b01a-fce3a95d31ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 4592,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro -- Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro -- Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados (failed).png'\n\n",
                "diff": null
              },
              "uuid": "44133db7-3e45-4265-8b76-921d447ced71",
              "parentUUID": "fe7843c1-8a69-4b48-b01a-fce3a95d31ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "519f398a-6b5c-4c46-96aa-e6b531a0d723",
            "44133db7-3e45-4265-8b76-921d447ced71"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5175,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32442bd8-be8f-482b-98bc-6fe5df94f7c2",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 4707,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se ao carregar a página deve ser possível pintar os pixels de preto (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se ao carregar a página deve ser possível pintar os pixels de preto (failed).png'\n\n",
                "diff": null
              },
              "uuid": "fc7be8ba-7e16-48c1-a0ce-b48c240adc7d",
              "parentUUID": "32442bd8-be8f-482b-98bc-6fe5df94f7c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 4746,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com (failed).png'\n\n",
                "diff": null
              },
              "uuid": "e750e266-5a47-458e-ab7e-5a29ca7904bb",
              "parentUUID": "32442bd8-be8f-482b-98bc-6fe5df94f7c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 4761,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, se (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada -- Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, se (failed).png'\n\n",
                "diff": null
              },
              "uuid": "8c3d6530-51e5-493c-b15f-a56bfda8846b",
              "parentUUID": "32442bd8-be8f-482b-98bc-6fe5df94f7c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fc7be8ba-7e16-48c1-a0ce-b48c240adc7d",
            "e750e266-5a47-458e-ab7e-5a29ca7904bb",
            "8c3d6530-51e5-493c-b15f-a56bfda8846b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2807c1ab-b14e-4f09-ac2e-4708841f8fb7",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 4610,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o botão tem o `id` denominado `clear-board` (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o botão tem o `id` denominado `clear-board` (failed).png'\n\n",
                "diff": null
              },
              "uuid": "31d93caf-29cc-4464-83ff-d2af9db21337",
              "parentUUID": "2807c1ab-b14e-4f09-ac2e-4708841f8fb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4606,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels (failed).png'\n\n",
                "diff": null
              },
              "uuid": "17268ab8-c76b-4802-b9fb-717533a43878",
              "parentUUID": "2807c1ab-b14e-4f09-ac2e-4708841f8fb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 4720,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o texto do botão é 'Limpar' (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se o texto do botão é 'Limpar' (failed).png'\n\n",
                "diff": null
              },
              "uuid": "e514a857-59ba-467c-ae89-14005d0a8046",
              "parentUUID": "2807c1ab-b14e-4f09-ac2e-4708841f8fb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 4837,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco -- Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco (failed).png'\n\n",
                "diff": null
              },
              "uuid": "b5afe298-69d0-40d7-ac5e-d0efda870e36",
              "parentUUID": "2807c1ab-b14e-4f09-ac2e-4708841f8fb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "31d93caf-29cc-4464-83ff-d2af9db21337",
            "17268ab8-c76b-4802-b9fb-717533a43878",
            "e514a857-59ba-467c-ae89-14005d0a8046",
            "b5afe298-69d0-40d7-ac5e-d0efda870e36"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18773,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b0eba2fa-934c-46e7-8778-96dca59a4288",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4618,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33669/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33669/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33669/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33669/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33669/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33669/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33669/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33669/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33669/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9899e7cd-bbd1-4548-85fd-0288f79620a7",
              "parentUUID": "b0eba2fa-934c-46e7-8778-96dca59a4288",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5105,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33669/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33669/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33669/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33669/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33669/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33669/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33669/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33669/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33669/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fb5a02ba-1611-41a1-ba9e-4081d42b9747",
              "parentUUID": "b0eba2fa-934c-46e7-8778-96dca59a4288",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4939,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input` (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input` (failed).png'\n\n",
                "diff": null
              },
              "uuid": "9c25078f-32ed-4e5d-acca-9583a951670b",
              "parentUUID": "b0eba2fa-934c-46e7-8778-96dca59a4288",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4724,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33669/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33669/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33669/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33669/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33669/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33669/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33669/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33669/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33669/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "45b2004f-21e7-47a0-ac22-346ad5029c2e",
              "parentUUID": "b0eba2fa-934c-46e7-8778-96dca59a4288",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4663,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels (failed).png'\n\n",
                "diff": null
              },
              "uuid": "bdfeff43-724e-43e0-a794-e202b1a2da08",
              "parentUUID": "b0eba2fa-934c-46e7-8778-96dca59a4288",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4770,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33669/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33669/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33669/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33669/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33669/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33669/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33669/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33669/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33669/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "feff9b00-4168-48cc-8b3e-ea577b319855",
              "parentUUID": "b0eba2fa-934c-46e7-8778-96dca59a4288",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4921,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto 'Board inválido!' (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto 'Board inválido!' (failed).png'\n\n",
                "diff": null
              },
              "uuid": "a1147e0a-2192-461d-856b-caf79a9dcb6d",
              "parentUUID": "b0eba2fa-934c-46e7-8778-96dca59a4288",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4806,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda (failed).png'\n\n",
                "diff": null
              },
              "uuid": "017d2405-b538-4c95-b0e9-2c7c9d6a10b3",
              "parentUUID": "b0eba2fa-934c-46e7-8778-96dca59a4288",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4876,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário -- Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca (failed).png'\n\n",
                "diff": null
              },
              "uuid": "1a71c3f5-c062-4ec0-b4e2-20c0c96a63c4",
              "parentUUID": "b0eba2fa-934c-46e7-8778-96dca59a4288",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9899e7cd-bbd1-4548-85fd-0288f79620a7",
            "fb5a02ba-1611-41a1-ba9e-4081d42b9747",
            "9c25078f-32ed-4e5d-acca-9583a951670b",
            "45b2004f-21e7-47a0-ac22-346ad5029c2e",
            "bdfeff43-724e-43e0-a794-e202b1a2da08",
            "feff9b00-4168-48cc-8b3e-ea577b319855",
            "a1147e0a-2192-461d-856b-caf79a9dcb6d",
            "017d2405-b538-4c95-b0e9-2c7c9d6a10b3",
            "1a71c3f5-c062-4ec0-b4e2-20c0c96a63c4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "39d4cc19-8337-4083-8805-dd4e8f703ab8",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4658,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33669/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33669/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33669/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33669/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33669/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33669/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33669/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33669/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33669/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5377c196-7310-4778-ad5e-fff1ee7b1df4",
              "parentUUID": "39d4cc19-8337-4083-8805-dd4e8f703ab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5008,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33669/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33669/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33669/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33669/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33669/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33669/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33669/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33669/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33669/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b7e30a67-9176-419e-9106-9f8f21cb1c06",
              "parentUUID": "39d4cc19-8337-4083-8805-dd4e8f703ab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4971,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33669/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33669/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33669/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33669/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33669/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33669/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33669/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33669/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33669/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33669/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33669/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "09431a70-9e45-458a-9988-8810becdcbb3",
              "parentUUID": "39d4cc19-8337-4083-8805-dd4e8f703ab8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5377c196-7310-4778-ad5e-fff1ee7b1df4",
            "b7e30a67-9176-419e-9106-9f8f21cb1c06",
            "09431a70-9e45-458a-9988-8810becdcbb3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14637,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4e1cb60b-931d-4310-b9bd-a207e25978c5",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1057,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página -- Verifica se as cores geradas na paleta são diferentes a cada carregamento da página (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página -- Verifica se as cores geradas na paleta são diferentes a cada carregamento da página (failed).png'\n\n",
                "diff": null
              },
              "uuid": "d4d5700f-1133-4c7d-8e79-752f36ad2cc5",
              "parentUUID": "4e1cb60b-931d-4310-b9bd-a207e25978c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 868,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página -- Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores (failed).png'",
                "estack": "Error: ENAMETOOLONG: name too long, open '/home/dheniarley/sd-014-b-project-pixels-art/cypress/screenshots/project.spec.js/12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página -- Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores (failed).png'\n\n",
                "diff": null
              },
              "uuid": "824e6843-849e-4098-8d7f-1ec6ebd1d9b8",
              "parentUUID": "4e1cb60b-931d-4310-b9bd-a207e25978c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d4d5700f-1133-4c7d-8e79-752f36ad2cc5",
            "824e6843-849e-4098-8d7f-1ec6ebd1d9b8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1925,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}